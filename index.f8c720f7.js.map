{"mappings":"ACCS,aAAa,OAAO,CAAC,M,4D","sources":["<anon>","src/editor.js"],"sourcesContent":["const editor = {\n    tab: localStorage.getItem(\"tab\") || \"items\",\n    page: 0,\n    selectedItem: 0,\n    actorItem: 0,\n    originResultItem: 0,\n    actorResultItem: 0,\n    workingItem: null,\n    workingRecipe: null,\n    offX: 0,\n    offY: 0,\n    targetX: 0,\n    targetY: 0\n};\nfunction getEditorInput(num) {\n    return document.getElementById(\"editor-input-\" + num);\n}\nfunction drawButton(x, y, w, h, t, callback) {\n    const hovered = mouseIsWithin(x, y, w, h);\n    if (hovered) fill(200, 0, 200);\n    else fill(100, 0, 100);\n    if (hovered && input.mouse[LEFT] === 1) {\n        fill(255, 0, 255);\n        callback();\n    }\n    rect(x, y, w, h);\n    fill(255);\n    textAlign(CENTER, CENTER);\n    textFont(Fonts.bold);\n    text(t, x + w / 2, y + h / 2 - 2);\n}\nfunction drawItemsPage() {\n    if (!editor.cp437counts) {\n        editor.cp437counts = {};\n        for (const item of REGISTRY.items)for (const display of item.display)editor.cp437counts[display.character] = (editor.cp437counts[display.character] || 0) + 1;\n        editor.cp437max = 0;\n        for(const key in editor.cp437counts)editor.cp437max = max(editor.cp437max, editor.cp437counts[key]);\n    }\n    if (!editor.workingItem) {\n        editor.workingItem = JSON.parse(JSON.stringify(REGISTRY.getItem(0)));\n        delete editor.workingItem.id;\n        editor.page = floor((REGISTRY.itemCount - 1) / 32);\n    }\n    fill(255);\n    for(let i = 0; i < 32; i += 1){\n        textAlign(LEFT, TOP);\n        const index = i + editor.page * 32;\n        const selected = index === editor.selectedItem;\n        if (index >= REGISTRY.itemCount) break;\n        const item = REGISTRY.getItem(index);\n        const offX = floor(i / 16) * width / 2;\n        fill(selected ? 100 : i % 2 === 0 ? 20 : 40);\n        rect(offX, 64 + i % 16 * 32, width / 2, 32);\n        fill(0);\n        rect(offX + 4, 64 + i % 16 * 32 + 4, 24, 24);\n        if (mouseIsWithin(offX + 0, 64 + i % 16 * 32, width / 2, 32) && input.mouse[LEFT] === 1) {\n            editor.workingItem = JSON.parse(JSON.stringify(item));\n            delete editor.workingItem.id;\n        }\n        drawItem(item.display, offX + 8, i % 16 * 32 + 72);\n        textFont(Fonts.bold);\n        fill(255);\n        text(\"(\" + index + \") \" + item.name, offX + 32, 64 + i % 16 * 32 + 6);\n        noStroke();\n        drawButton(offX + width / 2 - 320, 64 + i % 16 * 32 + 4, 84, 24, \"Select (O)\", ()=>{\n            editor.selectedItem = index;\n        });\n        drawButton(offX + width / 2 - 90, 64 + i % 16 * 32 + 4, 64, 24, \"Tree\", ()=>{\n            editor.selectedItem = index;\n            editor.tab = \"tree\";\n            editor.targetX = 0;\n            editor.targetY = 0;\n            editor.offX = 0;\n            editor.offY = 0;\n        });\n        if (editor.selectedItem > 0) {\n            drawButton(offX + width / 2 - 232, 64 + i % 16 * 32 + 4, 40, 24, \"(A)\", ()=>{\n                editor.actorItem = index;\n            });\n            drawButton(offX + width / 2 - 188, 64 + i % 16 * 32 + 4, 40, 24, \"(OR)\", ()=>{\n                editor.originResultItem = index;\n            });\n            drawButton(offX + width / 2 - 144, 64 + i % 16 * 32 + 4, 40, 24, \"(AR)\", ()=>{\n                editor.actorResultItem = index;\n            });\n        }\n        if (selected) {\n            stroke(255);\n            noFill();\n            rect(offX + width / 2 - 320, 64 + i % 16 * 32 + 4, 84, 24);\n        }\n        if (editor.actorItem === index) {\n            stroke(255);\n            noFill();\n            rect(offX + width / 2 - 232, 64 + i % 16 * 32 + 4, 40, 24);\n        }\n        if (editor.originResultItem === index) {\n            stroke(255);\n            noFill();\n            rect(offX + width / 2 - 188, 64 + i % 16 * 32 + 4, 40, 24);\n        }\n        if (editor.actorResultItem === index) {\n            stroke(255);\n            noFill();\n            rect(offX + width / 2 - 144, 64 + i % 16 * 32 + 4, 40, 24);\n        }\n        noStroke();\n    }\n    if ((input.keys[RIGHT_ARROW] === 1 || input.keys[\"D\".charCodeAt(0)] === 1) && document.activeElement.tagName !== \"INPUT\") {\n        editor.page += 1;\n        if (editor.page * 32 >= REGISTRY.itemCount) editor.page -= 1;\n    } else if ((input.keys[LEFT_ARROW] === 1 || input.keys[\"A\".charCodeAt(0)] === 1) && document.activeElement.tagName !== \"INPUT\") {\n        editor.page -= 1;\n        if (editor.page < 0) editor.page = 0;\n    }\n    drawButton(0, 576, 64, 32, \"PREV\", ()=>{\n        editor.page -= 1;\n        if (editor.page < 0) editor.page = 0;\n    });\n    drawButton(64, 576, 64, 32, \"NEXT\", ()=>{\n        editor.page += 1;\n        if (editor.page * 32 >= REGISTRY.itemCount) editor.page -= 1;\n    });\n    noFill();\n    stroke(255);\n    rect(128, 576, width - 128, height - 576 - 1);\n    rect(144, 592, 140, 140);\n    textSize(128);\n    textAlign(LEFT, TOP);\n    noStroke();\n    drawItem(editor.workingItem.display, 150, 598);\n    noStroke();\n    textSize(16);\n    for(let i = 0; i < editor.workingItem.display.length; i += 1)drawButton(144 + i * 32, 740, 32, 32, i, ()=>{\n        if (editor.workingItem.display.length > 1) editor.workingItem.display = [\n            ...editor.workingItem.display.slice(0, i),\n            ...editor.workingItem.display.slice(i + 1)\n        ];\n    });\n    drawButton(144, 772, 140, 32, \"+\", ()=>{\n        editor.workingItem.display = [\n            ...editor.workingItem.display,\n            {\n                ...editor.workingItem.display[editor.workingItem.display.length - 1]\n            }\n        ];\n    });\n    const lastDisplay = editor.workingItem.display[editor.workingItem.display.length - 1];\n    fill(COLORS[lastDisplay.color]);\n    textFont(Fonts.pixel);\n    textSize(12);\n    textAlign(LEFT, TOP);\n    for(let i = 0; i < 256; i += 1){\n        const x = i % 16;\n        const y = floor(i / 16);\n        fill((editor.cp437counts[i] ?? 0) / editor.cp437max * 255);\n        rect(300 + x * 12, 592 + y * 12, 12, 12);\n        fill(COLORS[lastDisplay.color]);\n        text(CP_437[i], 300 + x * 12, 592 + y * 12);\n        if (i === lastDisplay.character) {\n            stroke(255);\n            noFill();\n            rect(300 + x * 12, 592 + y * 12, 12, 12);\n            noStroke();\n        }\n        if (mouseIsWithin(300 + x * 12, 592 + y * 12, 12, 12) && input.mouse[LEFT] === 1) lastDisplay.character = i;\n    }\n    for(let i = 0; i < 64; i += 1){\n        const x = i % 8;\n        const y = floor(i / 8);\n        fill(COLORS[i]);\n        if (i === lastDisplay.color) stroke(255);\n        else noStroke();\n        rect(500 + x * 16 + 4, 592 + y * 16 + 4, 16, 16);\n        if (mouseIsWithin(500 + x * 16 + 4, 592 + y * 16 + 4, 16, 16) && input.mouse[LEFT] === 1) lastDisplay.color = i;\n    }\n    textSize(16);\n    fill(255);\n    editor.workingItem.name = getEditorInput(0).value.trim();\n    editor.workingItem.tags = getEditorInput(1).value.split(\",\").map((tag)=>tag.trim()).filter((tag)=>tag.length > 0);\n    textAlign(LEFT, TOP);\n    textFont(Fonts.regular);\n    text(\"Name: `\" + editor.workingItem.name + \"`\", 700, 592);\n    text(\"Tags: \", 700, 616);\n    text(\"Properties: \", 700, 676);\n    let tagX = 0;\n    for (const tag of editor.workingItem.tags){\n        fill(50);\n        rect(750 + tagX, 616, textWidth(tag) + 16, 32);\n        fill(255);\n        text(tag, 750 + tagX + 8, 624);\n        tagX += textWidth(tag) + 18;\n    }\n    tagX = 0;\n    textFont(Fonts.bold);\n    for(const key in editor.workingItem.properties){\n        const value = editor.workingItem.properties[key];\n        const txt = `\"${key}\":${value}`;\n        drawButton(800 + tagX, 676, textWidth(txt) + 16, 32, txt, ()=>{\n            delete editor.workingItem.properties[key];\n        });\n        tagX += textWidth(txt) + 18;\n    }\n    textAlign(LEFT, TOP);\n    textFont(Fonts.bold);\n    text(\"NAME\", width - 720, height - 60);\n    text(\"TAGS\", width - 545, height - 60);\n    text(\"PROPERTY\", width - 365, height - 60);\n    text(\"VALUE\", width - 190, height - 60);\n    drawButton(width - 100, height - 70, 50, 24, \"ADD\", ()=>{\n        const value = parseInt(getEditorInput(3).value.trim());\n        if (isNaN(value)) return;\n        editor.workingItem.properties[getEditorInput(2).value.trim()] = value;\n        getEditorInput(2).value = \"\";\n        getEditorInput(3).value = \"\";\n    });\n    drawButton(500, height - 40, 200, 32, \"COPY TO CLIPBOARD\", ()=>{\n        navigator.clipboard.writeText(JSON.stringify(editor.workingItem));\n    });\n}\nfunction drawRecipesPage() {\n    if (!editor.workingRecipe) {\n        let origin = [];\n        if (editor.selectedItem > 0) origin = [\n            {\n                type: \"Is\",\n                data: editor.selectedItem\n            }\n        ];\n        let actor = undefined;\n        if (editor.actorItem > 0) actor = {\n            conditions: [\n                {\n                    type: \"Is\",\n                    data: editor.actorItem\n                }\n            ]\n        };\n        let results = [\n            {\n                origin: {\n                    type: \"\"\n                },\n                actor: {\n                    type: \"\"\n                }\n            }\n        ];\n        if (editor.actorResultItem > 0 || editor.originResultItem > 0) {\n            let origin = {\n                type: \"\",\n                data: undefined\n            };\n            if (editor.originResultItem > 0) origin = {\n                type: editor.originResultItem === editor.selectedItem ? \"SameItem\" : \"NewItem\",\n                data: editor.originResultItem === editor.selectedItem ? {\n                    op: \"\",\n                    ref: 0\n                } : editor.originResultItem\n            };\n            let actor = {\n                type: \"\",\n                data: undefined\n            };\n            if (editor.actorResultItem > 0) actor = {\n                type: editor.actorResultItem === editor.actorItem ? \"SameItem\" : \"NewItem\",\n                data: editor.actorResultItem === editor.actorItem ? {\n                    op: \"\",\n                    ref: 0\n                } : editor.actorResultItem\n            };\n            results = [\n                {\n                    origin,\n                    actor\n                }\n            ];\n        }\n        editor.workingRecipe = new Recipe(0, {\n            conditions: origin\n        }, results, {\n            actor\n        });\n        delete editor.workingRecipe.id;\n    }\n    noFill();\n    stroke(255);\n    rect(100, 128, 140, 140);\n    if (!editor.workingRecipe.time) rect(300, 128, 140, 140);\n    for(let i = 0; i < editor.workingRecipe.results.length; i += 1){\n        rect(600, 128 + 240 * i, 140, 140);\n        rect(800, 128 + 240 * i, 140, 140);\n    }\n    line(250, 200, 290, 200);\n    line(270, 180, 270, 220);\n    line(450, 200, 590, 200);\n    line(570, 180, 590, 200);\n    line(570, 220, 590, 200);\n    textSize(128);\n    textAlign(LEFT, TOP);\n    noStroke();\n    const originQuery = editor.workingRecipe.origin ? REGISTRY.query(editor.workingRecipe.origin) : [];\n    const originItem = REGISTRY.getItem(originQuery[0] || 0);\n    const actorQuery = editor.workingRecipe.actor ? REGISTRY.query(editor.workingRecipe.actor) : [];\n    const actorItem = REGISTRY.getItem(actorQuery[0] || 0);\n    drawItem(originItem.display, 104, 132);\n    drawItem(actorItem.display, 304, 132);\n    fill(255);\n    textSize(16);\n    textFont(Fonts.bold);\n    text(originItem.name || \"<EMPTY>\", 100, 80);\n    if (!editor.workingRecipe.time) {\n        textFont(Fonts.regular);\n        text(actorItem.name || \"<EMPTY> (Hands)\", 300, 100);\n    } else {\n        textFont(Fonts.bold);\n        textAlign(CENTER, CENTER);\n        textSize(16);\n        text(\"TIME\", 370, 120);\n        textSize(32);\n        text(editor.workingRecipe.time + \"s\", 370, 150);\n        fill(200);\n        textSize(16);\n        textFont(Fonts.regular);\n        text(floor(editor.workingRecipe.time / 60) + \"m, \" + floor(editor.workingRecipe.time / 3600) + \"h, \" + floor(editor.workingRecipe.time / 86400) + \"d\", 370, 180);\n        drawButton(380, 200, 40, 16, \"+1s\", ()=>{\n            editor.workingRecipe.time += 1;\n        });\n        drawButton(320, 200, 40, 16, \"-1s\", ()=>{\n            editor.workingRecipe.time -= 1;\n        });\n        drawButton(380, 220, 40, 16, \"+1m\", ()=>{\n            editor.workingRecipe.time += 60;\n        });\n        drawButton(320, 220, 40, 16, \"-1m\", ()=>{\n            editor.workingRecipe.time -= 60;\n        });\n        drawButton(380, 240, 40, 16, \"+1h\", ()=>{\n            editor.workingRecipe.time += 3600;\n        });\n        drawButton(320, 240, 40, 16, \"-1h\", ()=>{\n            editor.workingRecipe.time -= 3600;\n        });\n        drawButton(380, 260, 40, 16, \"+1d\", ()=>{\n            editor.workingRecipe.time += 86400;\n        });\n        drawButton(320, 260, 40, 16, \"-1d\", ()=>{\n            editor.workingRecipe.time -= 86400;\n        });\n    }\n    textAlign(LEFT, TOP);\n    for(let i = 0; i < editor.workingRecipe.results.length; i += 1){\n        const result = editor.workingRecipe.results[i];\n        let origin = 0;\n        if (result.origin.type === \"NewItem\") origin = result.origin.data;\n        else if (result.origin.type === \"SameItem\") origin = originItem.id;\n        let actor = 0;\n        if (result.origin.type === \"NewItem\") actor = result.actor.data;\n        else if (result.origin.type === \"SameItem\") actor = actorItem.id;\n        const originResult = REGISTRY.getItem(origin);\n        const actorResult = REGISTRY.getItem(actor);\n        textAlign(LEFT, TOP);\n        textSize(128);\n        drawItem(originResult.display, 604, 132 + 240 * i);\n        drawItem(actorResult.display, 804, 132 + 240 * i);\n        fill(255);\n        textSize(16);\n        textFont(Fonts.bold);\n        text(`${originResult.name || \"<EMPTY>\"} (${result.origin.type || \"None\"})`, 600, 80 + i * 240);\n        textFont(Fonts.regular);\n        text(`${actorResult.name || \"<EMPTY>\"} (${result.actor.type || \"None\"}) (Hands)`, 800, 100 + i * 240);\n        textSize(8);\n        drawButton(600, 270 + i * 240, 40, 20, \"NONE\", ()=>{\n            result.origin = {\n                type: \"\"\n            };\n        });\n        drawButton(640, 270 + i * 240, 40, 20, \"SAME\", ()=>{\n            result.origin = {\n                type: \"SameItem\",\n                data: {\n                    op: \"~\",\n                    ref: 0\n                }\n            };\n        });\n        drawButton(680, 270 + i * 240, 40, 20, \"NEW\", ()=>{\n            result.origin = {\n                type: \"NewItem\",\n                data: editor.originResultItem\n            };\n        });\n        drawButton(800, 270 + i * 240, 40, 20, \"NONE\", ()=>{\n            result.actor = {\n                type: \"\"\n            };\n        });\n        drawButton(840, 270 + i * 240, 40, 20, \"SAME\", ()=>{\n            result.actor = {\n                type: \"SameItem\",\n                data: {\n                    op: \"~\",\n                    ref: 0\n                }\n            };\n        });\n        drawButton(880, 270 + i * 240, 40, 20, \"NEW\", ()=>{\n            result.actor = {\n                type: \"NewItem\",\n                data: editor.actorResultItem\n            };\n        });\n        textSize(16);\n        let j = 0;\n        for (const op of [\n            \"~\",\n            \"=\",\n            \"+\",\n            \"-\"\n        ]){\n            if (result.origin.type === \"SameItem\") drawButton(1000, 100 + i * 240 + j * 40, 30, 30, op, ()=>{\n                result.origin.data.op = op;\n            });\n            if (result.actor.type === \"SameItem\") drawButton(1200, 100 + i * 240 + j * 40, 30, 30, op, ()=>{\n                result.actor.data.op = op;\n            });\n            j += 1;\n        }\n        fill(255);\n        textAlign(LEFT, TOP);\n        if (result.origin.type === \"SameItem\" && [\n            \"=\",\n            \"+\",\n            \"-\"\n        ].includes(result.origin.data.op)) {\n            text(result.origin.data.op + \" \" + result.origin.data.ref, 1050, 100 + i * 240);\n            drawButton(1050, 150 + i * 240, 30, 30, \"-1\", ()=>{\n                result.origin.data.ref -= 1;\n            });\n            drawButton(1050, 190 + i * 240, 30, 30, \"+1\", ()=>{\n                result.origin.data.ref += 1;\n            });\n            drawButton(1090, 150 + i * 240, 30, 30, \"-10\", ()=>{\n                result.origin.data.ref -= 10;\n            });\n            drawButton(1090, 190 + i * 240, 30, 30, \"+10\", ()=>{\n                result.origin.data.ref += 10;\n            });\n        }\n        if (result.actor.type === \"SameItem\" && [\n            \"=\",\n            \"+\",\n            \"-\"\n        ].includes(result.actor.data.op)) {\n            text(result.actor.data.op + \" \" + result.actor.data.ref, 1250, 100 + i * 240);\n            drawButton(1250, 150 + i * 240, 30, 30, \"-1\", ()=>{\n                result.actor.data.ref -= 1;\n            });\n            drawButton(1250, 190 + i * 240, 30, 30, \"+1\", ()=>{\n                result.actor.data.ref += 1;\n            });\n            drawButton(1290, 150 + i * 240, 30, 30, \"-10\", ()=>{\n                result.actor.data.ref -= 10;\n            });\n            drawButton(1290, 190 + i * 240, 30, 30, \"+10\", ()=>{\n                result.actor.data.ref += 10;\n            });\n        }\n        textAlign(CENTER, CENTER);\n        fill(255);\n        if (editor.workingRecipe.results.length > 1) {\n            result.chance = result.chance || 1;\n            textSize(32);\n            text(result.chance, 1400, 150 + i * 240);\n            textSize(16);\n            text(\"CHANCE\", 1400, 120 + i * 240);\n            drawButton(1355, 200 + i * 240, 40, 40, \"-1\", ()=>{\n                result.chance -= 1;\n            });\n            drawButton(1405, 200 + i * 240, 40, 40, \"+1\", ()=>{\n                result.chance += 1;\n            });\n        }\n    }\n    textSize(16);\n    drawButton(600, 70 + editor.workingRecipe.results.length * 240, 340, 30, \"ADD\", ()=>{\n        editor.workingRecipe.results = [\n            ...editor.workingRecipe.results,\n            JSON.parse(JSON.stringify(editor.workingRecipe.results[editor.workingRecipe.results.length - 1]))\n        ];\n    });\n    drawButton(300, 300, 100, 30, \"TIME\", ()=>{\n        editor.workingRecipe.time = 60;\n        editor.workingRecipe.actor = undefined;\n        editor.workingRecipe.actorValue = undefined;\n    });\n    drawButton(300, 330, 100, 30, \"ACTOR\", ()=>{\n        editor.workingRecipe.time = 0;\n        editor.workingRecipe.actor = {\n            conditions: [\n                {\n                    type: \"Is\",\n                    data: editor.actorItem\n                }\n            ]\n        };\n    });\n    let i = 0;\n    for (const type of [\n        \"~\",\n        \"=\",\n        \"<\",\n        \">\",\n        \"<=\",\n        \">=\"\n    ]){\n        drawButton(100, 300 + i * 40, 30, 30, type, ()=>{\n            if (i === 0) {\n                editor.workingRecipe.originValue = undefined;\n                return;\n            } else editor.workingRecipe.originValue = {\n                op: type,\n                ref: 0\n            };\n        });\n        if (editor.workingRecipe.actor) drawButton(300, 400 + i * 40, 30, 30, type, ()=>{\n            if (i === 0) {\n                editor.workingRecipe.actorValue = undefined;\n                return;\n            } else editor.workingRecipe.actorValue = {\n                op: type,\n                ref: 0\n            };\n        });\n        i += 1;\n    }\n    fill(255);\n    textFont(Fonts.bold);\n    textSize(16);\n    textAlign(LEFT, TOP);\n    if (editor.workingRecipe.originValue) {\n        text(editor.workingRecipe.originValue.op + \" \" + editor.workingRecipe.originValue.ref, 150, 300);\n        drawButton(150, 350, 30, 30, \"-1\", ()=>{\n            editor.workingRecipe.originValue.ref -= 1;\n        });\n        drawButton(190, 350, 30, 30, \"+1\", ()=>{\n            editor.workingRecipe.originValue.ref += 1;\n        });\n        drawButton(150, 390, 30, 30, \"-10\", ()=>{\n            editor.workingRecipe.originValue.ref -= 10;\n        });\n        drawButton(190, 390, 30, 30, \"+10\", ()=>{\n            editor.workingRecipe.originValue.ref += 10;\n        });\n    }\n    textAlign(LEFT, TOP);\n    if (editor.workingRecipe.actorValue) {\n        text(editor.workingRecipe.actorValue.op + \" \" + editor.workingRecipe.actorValue.ref, 350, 400);\n        drawButton(350, 450, 30, 30, \"-1\", ()=>{\n            editor.workingRecipe.actorValue.ref -= 1;\n        });\n        drawButton(390, 450, 30, 30, \"+1\", ()=>{\n            editor.workingRecipe.actorValue.ref += 1;\n        });\n        drawButton(350, 490, 30, 30, \"-10\", ()=>{\n            editor.workingRecipe.actorValue.ref -= 10;\n        });\n        drawButton(390, 490, 30, 30, \"+10\", ()=>{\n            editor.workingRecipe.actorValue.ref += 10;\n        });\n    }\n    drawButton(100, 600, 200, 40, \"COPY TO CLIPBOARD\", ()=>{\n        navigator.clipboard.writeText(JSON.stringify(editor.workingRecipe));\n    });\n    textAlign(LEFT, TOP);\n    text(\"ORIGIN\", width - 720, height - 60);\n    text(\"ACTOR\", width - 545, height - 60);\n}\nfunction drawTreePage() {\n    translate(width / 2 + editor.offX, height / 2 - 200 + editor.offY);\n    if (input.mouse[LEFT] >= 1) {\n        editor.targetX += mouseX - pmouseX;\n        editor.targetY += mouseY - pmouseY;\n    }\n    editor.offX = lerp(editor.offX, editor.targetX, 0.5);\n    editor.offY = lerp(editor.offY, editor.targetY, 0.5);\n    function treeWidth(id, depth = 0) {\n        if (id === 0 || depth > 10) return 1;\n        const item = REGISTRY.getItem(id);\n        if (item.tags.includes(\"root\") || item.tags.includes(\"natural\")) return 1;\n        if (item.resultedBy.length === 0) return 1;\n        const recipe = item.resultedBy[0];\n        if (recipe.getAnActor() === 0) return 1;\n        return treeWidth(recipe.getAnOrigin(), depth + 1) + treeWidth(recipe.getAnActor(), depth + 1) + 1;\n    }\n    function drawTree(id, x, y, time = 0, depth = 0) {\n        noFill();\n        stroke(255);\n        rect(x - 10, y - 10, 20, 20);\n        noStroke();\n        if (id === -1) {\n            const dispTime = time > 86400 ? floor(time / 86400) + \"d\" : time > 3600 ? floor(time / 3600) + \"h\" : time > 60 ? floor(time / 60) + \"m\" : time + \"s\";\n            fill(255);\n            textAlign(CENTER, CENTER);\n            textFont(Fonts.bold);\n            textSize(8);\n            text(dispTime, x, y);\n            return;\n        }\n        const item = REGISTRY.getItem(id);\n        textSize(16);\n        textAlign(LEFT, TOP);\n        drawItem(item.display, x - 8, y - 8);\n        textSize(8);\n        textAlign(CENTER, BOTTOM);\n        textFont(Fonts.regular);\n        fill(255);\n        text(item.name, x, y - 12);\n        if (depth > 10 || item.resultedBy.length === 0 || item.tags.includes(\"root\") || item.tags.includes(\"natural\")) return;\n        noFill();\n        stroke(255);\n        line(x, y + 10, x, y + 30);\n        line(x - 5, y + 15, x, y + 10);\n        line(x + 5, y + 15, x, y + 10);\n        const origin = item.resultedBy[0].getAnOrigin();\n        const actor = item.resultedBy[0].getAnActor();\n        const isTimed = item.resultedBy[0].time > 0;\n        if (actor === 0 && !isTimed) {\n            line(x, y + 30, x, y + 60);\n            drawTree(origin, x, y + 60, 0, depth + 1);\n            return;\n        }\n        const leftWidth = treeWidth(origin);\n        const rightWidth = isTimed ? 1 : treeWidth(actor, depth);\n        const leftX = x - leftWidth * 20;\n        const rightX = x + rightWidth * 20;\n        line(x, y + 30, leftX, y + 30);\n        line(leftX, y + 30, leftX, y + 40);\n        line(x, y + 30, rightX, y + 30);\n        line(rightX, y + 30, rightX, y + 40);\n        drawTree(origin, leftX, y + 60, 0, depth + 1);\n        if (!isTimed) drawTree(actor, rightX, y + 60, 0, depth + 1);\n        else drawTree(-1, rightX, y + 60, item.resultedBy[0].time, depth + 1);\n    }\n    drawTree(editor.selectedItem, 0, 0);\n}\nfunction drawEditor() {\n    background(0);\n    textFont(Fonts.bold);\n    textSize(16);\n    fill(255);\n    noStroke();\n    textAlign(LEFT, TOP);\n    text(\"EDITOR\", 4, 4);\n    drawButton(0, 32, 64, 32, \"ITEMS\", ()=>{\n        editor.workingRecipe = null;\n        editor.workingItem = null;\n        editor.selectedItem = 0;\n        editor.actorItem = 0;\n        editor.actorResultItem = 0;\n        editor.originResultItem = 0;\n        editor.tab = \"items\";\n        localStorage.setItem(\"tab\", \"items\");\n    });\n    const goToRecipes = ()=>{\n        editor.tab = \"recipes\";\n        editor.workingRecipe = null;\n        editor.workingItem = null;\n    };\n    if (input.keys[\"R\".charCodeAt(0)] === 1 && document.activeElement.tagName !== \"INPUT\") goToRecipes();\n    drawButton(64, 32, 128, 32, \"RECIPES\", goToRecipes);\n    if (editor.tab === \"items\") drawItemsPage();\n    else if (editor.tab === \"recipes\") drawRecipesPage();\n    else if (editor.tab === \"tree\") drawTreePage();\n}\n\n//# sourceMappingURL=index.f8c720f7.js.map\n","const editor = {\r\n    tab: localStorage.getItem('tab') || 'items',\r\n    page: 0,\r\n    selectedItem: 0,\r\n    actorItem: 0,\r\n    originResultItem: 0,\r\n    actorResultItem: 0,\r\n    workingItem: null,\r\n    workingRecipe: null,\r\n    offX: 0,\r\n    offY: 0,\r\n    targetX: 0,\r\n    targetY: 0,\r\n};\r\n\r\nfunction getEditorInput(num) {\r\n    return document.getElementById('editor-input-' + num);\r\n}\r\n\r\nfunction drawButton(x, y, w, h, t, callback) {\r\n    const hovered = mouseIsWithin(x, y, w, h);\r\n    if (hovered) {\r\n        fill(200, 0, 200);\r\n    } else {\r\n        fill(100, 0, 100);\r\n    }\r\n    if (hovered && input.mouse[LEFT] === 1) {\r\n        fill(255, 0, 255);\r\n        callback();\r\n    }\r\n    rect(x, y, w, h);\r\n    fill(255);\r\n    textAlign(CENTER, CENTER);\r\n    textFont(Fonts.bold);\r\n    text(t, x + w / 2, y + h / 2 - 2);\r\n}\r\n\r\nfunction drawItemsPage() {\r\n    if (!editor.cp437counts) {\r\n        editor.cp437counts = {};\r\n        for (const item of REGISTRY.items) {\r\n            for (const display of item.display) {\r\n                editor.cp437counts[display.character] = (editor.cp437counts[display.character] || 0) + 1;\r\n            }\r\n        }\r\n        editor.cp437max = 0;\r\n        for (const key in editor.cp437counts) {\r\n            editor.cp437max = max(editor.cp437max, editor.cp437counts[key]);\r\n        }\r\n    }\r\n    if (!editor.workingItem) {\r\n        editor.workingItem = JSON.parse(JSON.stringify(REGISTRY.getItem(0)));\r\n        delete editor.workingItem.id;\r\n        editor.page = floor((REGISTRY.itemCount - 1) / 32);\r\n\r\n        \r\n    }\r\n    fill(255);\r\n    \r\n    for (let i = 0; i < 32; i += 1) {\r\n        \r\n        textAlign(LEFT, TOP);\r\n        \r\n        const index = i + editor.page * 32;\r\n        const selected = index === editor.selectedItem;\r\n\r\n        if (index >= REGISTRY.itemCount) {\r\n            break;\r\n        }\r\n        const item = REGISTRY.getItem(index);\r\n\r\n        const offX = floor(i / 16) * width / 2;\r\n        \r\n        fill(selected ? 100 : (i % 2 === 0 ? 20 : 40));\r\n        rect(offX, 64 + (i%16) * 32, width / 2, 32);\r\n        fill(0);\r\n        rect(offX + 4, 64 + (i%16) * 32 + 4, 24, 24);\r\n        if (mouseIsWithin(offX + 0, 64 + (i%16) * 32, width / 2, 32) && input.mouse[LEFT] === 1) {\r\n            editor.workingItem = JSON.parse(JSON.stringify(item));\r\n            delete editor.workingItem.id;\r\n        }\r\n        drawItem(item.display, offX + 8, (i%16) * 32 + 72);\r\n        textFont(Fonts.bold);\r\n        fill(255);\r\n        text('(' + index + ') ' + item.name, offX + 32, 64 + (i%16) * 32 + 6);\r\n        noStroke();\r\n        drawButton(offX + width / 2 - 320, 64 + (i%16) * 32 + 4, 84, 24, 'Select (O)', () => {\r\n            editor.selectedItem = index;\r\n        });\r\n        drawButton(offX + width / 2 - 90, 64 + (i%16) * 32 + 4, 64, 24, 'Tree', () => {\r\n            editor.selectedItem = index;\r\n            editor.tab = 'tree';\r\n            editor.targetX = 0;\r\n            editor.targetY = 0;\r\n            editor.offX = 0;\r\n            editor.offY = 0;\r\n        });\r\n        if (editor.selectedItem > 0) {\r\n            drawButton(offX + width / 2 - 232, 64 + (i%16) * 32 + 4, 40, 24, '(A)', () => {\r\n                editor.actorItem = index;\r\n            });\r\n            drawButton(offX + width / 2 - 188, 64 + (i%16) * 32 + 4, 40, 24, '(OR)', () => {\r\n                editor.originResultItem = index;\r\n            });\r\n            drawButton(offX + width / 2 - 144, 64 + (i%16) * 32 + 4, 40, 24, '(AR)', () => {\r\n                editor.actorResultItem = index;\r\n            });\r\n        }\r\n        \r\n        if (selected) {\r\n            stroke(255);\r\n            noFill();\r\n            rect(offX + width / 2 - 320, 64 + (i%16) * 32 + 4, 84, 24);\r\n        }\r\n        if (editor.actorItem === index) {\r\n            stroke(255);\r\n            noFill();\r\n            rect(offX + width / 2 - 232, 64 + (i%16) * 32 + 4, 40, 24);\r\n        } \r\n        if (editor.originResultItem === index) {\r\n            stroke(255);\r\n            noFill();\r\n            rect(offX + width / 2 - 188, 64 + (i%16) * 32 + 4, 40, 24);\r\n        } \r\n        if (editor.actorResultItem === index) {\r\n            stroke(255);\r\n            noFill();\r\n            rect(offX + width / 2 - 144, 64 + (i%16) * 32 + 4, 40, 24);\r\n        } \r\n        noStroke();\r\n    }\r\n    if ((input.keys[RIGHT_ARROW] === 1 || input.keys['D'.charCodeAt(0)] === 1) && document.activeElement.tagName !== 'INPUT') {\r\n        editor.page += 1;\r\n        if (editor.page * 32 >= REGISTRY.itemCount) {\r\n            editor.page -= 1;\r\n        }\r\n    } else if ((input.keys[LEFT_ARROW] === 1 || input.keys['A'.charCodeAt(0)] === 1) && document.activeElement.tagName !== 'INPUT') {\r\n        editor.page -= 1;\r\n        if (editor.page < 0) {\r\n            editor.page = 0;\r\n        }\r\n    }\r\n    drawButton(0, 64 + 32 * 16, 64, 32, 'PREV', () => {\r\n        editor.page -= 1;\r\n        if (editor.page < 0) {\r\n            editor.page = 0;\r\n        }\r\n    });\r\n    drawButton(64, 64 + 32 * 16, 64, 32, 'NEXT', () => {\r\n        editor.page += 1;\r\n        if (editor.page * 32 >= REGISTRY.itemCount) {\r\n            editor.page -= 1;\r\n        }\r\n    });\r\n\r\n    noFill();\r\n    stroke(255);\r\n    rect(128, 576, width - 128, height - 576 - 1);\r\n    rect(128 + 16, 576 + 16, 140, 140);\r\n    textSize(128);\r\n    textAlign(LEFT, TOP);\r\n    noStroke();\r\n    drawItem(editor.workingItem.display, 128 + 22, 576 + 22);\r\n    noStroke();\r\n    textSize(16);\r\n    for (let i = 0; i < editor.workingItem.display.length; i += 1) {\r\n        drawButton(128 + 16 + i * 32, 576 + 16 + 140 + 8, 32, 32, i, () => {\r\n            if (editor.workingItem.display.length > 1)\r\n                editor.workingItem.display = [...editor.workingItem.display.slice(0, i), ...editor.workingItem.display.slice(i + 1)];\r\n        });\r\n    }\r\n    drawButton(128 + 16, 576 + 16 + 140 + 40, 140, 32, '+', () => {\r\n        editor.workingItem.display = [...editor.workingItem.display, {...editor.workingItem.display[editor.workingItem.display.length - 1]}];  \r\n    });\r\n    const lastDisplay = editor.workingItem.display[editor.workingItem.display.length - 1];\r\n    fill(COLORS[lastDisplay.color]);\r\n    textFont(Fonts.pixel);\r\n    textSize(12);\r\n    textAlign(LEFT, TOP);\r\n    for (let i = 0; i < 256; i += 1) {\r\n        const x = i % 16;\r\n        const y = floor(i / 16);\r\n        fill((editor.cp437counts[i] ?? 0) / editor.cp437max * 255);\r\n        rect(300 + x * 12, 576 + 16 + y * 12, 12, 12);\r\n        fill(COLORS[lastDisplay.color]);\r\n        text(CP_437[i], 300 + x * 12, 576 + 16 + y * 12);\r\n        if (i === lastDisplay.character) {\r\n            stroke(255);\r\n            noFill();\r\n            rect(300 + x * 12, 576 + 16 + y * 12, 12, 12);\r\n            noStroke();\r\n        } \r\n        if (mouseIsWithin(300 + x * 12, 576 + 16 + y * 12, 12, 12) && input.mouse[LEFT] === 1) {\r\n            lastDisplay.character = i;\r\n        }\r\n    }\r\n    for (let i = 0; i < 64; i += 1) {\r\n        const x = i % 8;\r\n        const y = floor(i / 8);\r\n        fill(COLORS[i]);\r\n        if (i === lastDisplay.color) {\r\n            stroke(255);\r\n        } else {\r\n            noStroke();\r\n        }\r\n        rect(500 + x * 16 + 4, 576 + 16 + y * 16 + 4, 16, 16);\r\n        if (mouseIsWithin(500 + x * 16 + 4, 576 + 16 + y * 16 + 4, 16, 16) && input.mouse[LEFT] === 1) {\r\n            lastDisplay.color = i;\r\n        }\r\n    }\r\n    textSize(16);\r\n    fill(255);\r\n    editor.workingItem.name = getEditorInput(0).value.trim();\r\n    editor.workingItem.tags = getEditorInput(1).value.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0);\r\n    textAlign(LEFT, TOP);\r\n    textFont(Fonts.regular);\r\n    text('Name: `' + editor.workingItem.name + '`', 700, 576 + 16);\r\n    text('Tags: ', 700, 576 + 40);\r\n    text('Properties: ', 700, 576 + 100);\r\n    let tagX = 0;\r\n    for (const tag of editor.workingItem.tags) {\r\n        fill(50);\r\n        rect(750 + tagX, 576 + 40, textWidth(tag) + 16, 32);\r\n        fill(255);\r\n        text(tag, 750 + tagX + 8, 576 + 40 + 8);\r\n        tagX += textWidth(tag) + 18;\r\n    }\r\n    tagX = 0;\r\n    textFont(Fonts.bold);\r\n    for (const key in editor.workingItem.properties) {\r\n        const value = editor.workingItem.properties[key];\r\n        const txt = `\"${key}\":${value}`;\r\n        drawButton(800 + tagX, 576 + 100, textWidth(txt) + 16, 32, txt, () => {\r\n            delete editor.workingItem.properties[key];\r\n        })\r\n        tagX += textWidth(txt) + 18;\r\n    }\r\n    textAlign(LEFT, TOP);\r\n    textFont(Fonts.bold);\r\n    text('NAME', width - 720, height - 60);\r\n    text('TAGS', width - 545, height - 60);\r\n    text('PROPERTY', width - 365, height - 60);\r\n    text('VALUE', width - 190, height - 60);\r\n    drawButton(width - 100, height - 70, 50, 24, 'ADD', () => {\r\n        const value = parseInt(getEditorInput(3).value.trim());\r\n        if (isNaN(value)) return;\r\n        editor.workingItem.properties[getEditorInput(2).value.trim()] = value;\r\n        getEditorInput(2).value = '';\r\n        getEditorInput(3).value = '';\r\n    });\r\n\r\n    drawButton(500, height - 40, 200, 32, 'COPY TO CLIPBOARD', () => {\r\n        navigator.clipboard.writeText(JSON.stringify(editor.workingItem));\r\n\r\n    });\r\n}\r\n\r\nfunction drawRecipesPage() {\r\n    if (!editor.workingRecipe) {\r\n        let origin = [];\r\n        if (editor.selectedItem > 0) {\r\n            origin = [{ type: 'Is', data: editor.selectedItem }];\r\n        }\r\n        let actor = undefined;\r\n        if (editor.actorItem > 0) {\r\n            actor = {conditions: [{ type: 'Is', data: editor.actorItem }]};\r\n        }\r\n        let results = [{ origin: {type: ''}, actor: {type: ''}}];\r\n        if (editor.actorResultItem > 0 || editor.originResultItem > 0) {\r\n            let origin = { type: '', data: undefined };\r\n            if (editor.originResultItem > 0) {\r\n                origin = { \r\n                    type: editor.originResultItem === editor.selectedItem ? 'SameItem' : 'NewItem',\r\n                    data: editor.originResultItem === editor.selectedItem ? { op: '', ref: 0 } : editor.originResultItem\r\n                };\r\n            }\r\n            let actor = { type: '', data: undefined }\r\n            if (editor.actorResultItem > 0) {\r\n                actor = { \r\n                    type: editor.actorResultItem === editor.actorItem ? 'SameItem' : 'NewItem',\r\n                    data: editor.actorResultItem === editor.actorItem ? { op: '', ref: 0 } : editor.actorResultItem\r\n                };\r\n            }\r\n            results = [{ origin, actor }];\r\n        }\r\n        editor.workingRecipe = new Recipe(0, { conditions: origin }, results, { actor })\r\n        delete editor.workingRecipe.id;\r\n    }\r\n\r\n    noFill();\r\n    stroke(255);\r\n    rect(100, 128, 140, 140);\r\n    if (!editor.workingRecipe.time) {\r\n        rect(300, 128, 140, 140);\r\n    }\r\n    for (let i = 0; i < editor.workingRecipe.results.length; i += 1) {\r\n        rect(600, 128 + 240 * i, 140, 140);\r\n        rect(800, 128 + 240 * i, 140, 140);\r\n    }\r\n\r\n    line(250, 200, 290, 200);\r\n    line(270, 180, 270, 220);\r\n\r\n    line(450, 200, 590, 200);\r\n    line(570, 180, 590, 200);\r\n    line(570, 220, 590, 200);\r\n    textSize(128);\r\n    textAlign(LEFT, TOP);\r\n    noStroke();\r\n    const originQuery = editor.workingRecipe.origin ? REGISTRY.query(editor.workingRecipe.origin) : [];\r\n    const originItem = REGISTRY.getItem(originQuery[0] || 0);\r\n    const actorQuery = editor.workingRecipe.actor ? REGISTRY.query(editor.workingRecipe.actor) : [];\r\n    const actorItem = REGISTRY.getItem(actorQuery[0] || 0);\r\n    drawItem(originItem.display, 104, 132);\r\n    drawItem(actorItem.display, 304, 132);\r\n    \r\n    fill(255);\r\n    textSize(16);\r\n    textFont(Fonts.bold);\r\n    text(originItem.name || '<EMPTY>', 100, 80);\r\n    if (!editor.workingRecipe.time) {\r\n        textFont(Fonts.regular);\r\n        text(actorItem.name || '<EMPTY>' + ' (Hands)', 300, 100);\r\n    } else {\r\n        textFont(Fonts.bold);\r\n        textAlign(CENTER, CENTER);\r\n        textSize(16);\r\n        text('TIME', 370, 120);\r\n        textSize(32);\r\n        text(editor.workingRecipe.time + 's', 370, 150);\r\n        fill(200);\r\n        textSize(16);\r\n        textFont(Fonts.regular);\r\n        text(floor(editor.workingRecipe.time / 60) + 'm, ' + floor(editor.workingRecipe.time / 3600) + 'h, ' + floor(editor.workingRecipe.time / 86400) + 'd', 370, 180);\r\n\r\n        drawButton(380, 200, 40, 16, '+1s', () => {\r\n            editor.workingRecipe.time += 1;\r\n        });\r\n        drawButton(320, 200, 40, 16, '-1s', () => {\r\n            editor.workingRecipe.time -= 1;\r\n        });\r\n        drawButton(380, 220, 40, 16, '+1m', () => {\r\n            editor.workingRecipe.time += 60;\r\n        });\r\n        drawButton(320, 220, 40, 16, '-1m', () => {\r\n            editor.workingRecipe.time -= 60;\r\n        });\r\n        drawButton(380, 240, 40, 16, '+1h', () => {\r\n            editor.workingRecipe.time += 3600;\r\n        });\r\n        drawButton(320, 240, 40, 16, '-1h', () => {\r\n            editor.workingRecipe.time -= 3600;\r\n        });\r\n        drawButton(380, 260, 40, 16, '+1d', () => {\r\n            editor.workingRecipe.time += 86400;\r\n        });\r\n        drawButton(320, 260, 40, 16, '-1d', () => {\r\n            editor.workingRecipe.time -= 86400;\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    textAlign(LEFT, TOP)\r\n    for (let i = 0; i < editor.workingRecipe.results.length; i += 1) {\r\n        const result = editor.workingRecipe.results[i];\r\n        let origin = 0;\r\n        if (result.origin.type === 'NewItem') {\r\n            origin = result.origin.data;\r\n        } else if (result.origin.type === 'SameItem') {\r\n            origin = originItem.id;\r\n        }\r\n        let actor = 0;\r\n        if (result.origin.type === 'NewItem') {\r\n            actor = result.actor.data;\r\n        } else if (result.origin.type === 'SameItem') {\r\n            actor = actorItem.id;\r\n        }\r\n        const originResult = REGISTRY.getItem(origin);\r\n        const actorResult = REGISTRY.getItem(actor);\r\n        textAlign(LEFT, TOP);\r\n        textSize(128);\r\n        drawItem(originResult.display, 604, 132 + 240 * i);\r\n        drawItem(actorResult.display, 804, 132 + 240 * i);\r\n\r\n        \r\n        fill(255);\r\n        textSize(16);\r\n        textFont(Fonts.bold);\r\n        text(`${originResult.name || '<EMPTY>'} (${result.origin.type || 'None'})`, 600, 80 + i * 240);\r\n        textFont(Fonts.regular);\r\n        text(`${actorResult.name || '<EMPTY>'} (${result.actor.type || 'None'}) (Hands)`, 800, 100 + i * 240);\r\n\r\n        textSize(8);\r\n        drawButton(600, 270 + i * 240, 40, 20, 'NONE', () => {\r\n            result.origin = { type: '' };\r\n        });\r\n        drawButton(640, 270 + i * 240, 40, 20, 'SAME', () => {\r\n            result.origin = { type: 'SameItem', data: { op: '~', ref: 0 } };\r\n        });\r\n        drawButton(680, 270 + i * 240, 40, 20, 'NEW', () => {\r\n            result.origin = { type: 'NewItem', data: editor.originResultItem };\r\n        });\r\n\r\n        drawButton(800, 270 + i * 240, 40, 20, 'NONE', () => {\r\n            result.actor = { type: '' };\r\n        });\r\n        drawButton(840, 270 + i * 240, 40, 20, 'SAME', () => {\r\n            result.actor = { type: 'SameItem', data: { op: '~', ref: 0 } };\r\n        });\r\n        drawButton(880, 270 + i * 240, 40, 20, 'NEW', () => {\r\n            result.actor = { type: 'NewItem', data: editor.actorResultItem };\r\n        });\r\n\r\n        textSize(16);\r\n        let j = 0;\r\n        for (const op of ['~', '=', '+', '-']) {\r\n            if (result.origin.type === 'SameItem') {\r\n                drawButton(1000, 100 + i * 240 + j * 40, 30, 30, op, () => {\r\n                    result.origin.data.op = op;\r\n                });\r\n            }\r\n            if (result.actor.type === 'SameItem') {\r\n                drawButton(1200, 100 + i * 240 + j * 40, 30, 30, op, () => {\r\n                    result.actor.data.op = op;\r\n                });\r\n            }\r\n            j += 1;\r\n        }\r\n\r\n        fill(255);\r\n        textAlign(LEFT, TOP);\r\n        if (result.origin.type === 'SameItem' && ['=', '+', '-'].includes(result.origin.data.op)) {\r\n            text(result.origin.data.op + ' ' + result.origin.data.ref, 1050, 100 + i * 240);\r\n            drawButton(1050, 150 + i * 240, 30, 30, '-1', () => {\r\n                result.origin.data.ref -= 1;\r\n            });\r\n            drawButton(1050, 190 + i * 240, 30, 30, '+1', () => {\r\n                result.origin.data.ref += 1;\r\n            });\r\n            drawButton(1090, 150 + i * 240, 30, 30, '-10', () => {\r\n                result.origin.data.ref -= 10;\r\n            });\r\n            drawButton(1090, 190 + i * 240, 30, 30, '+10', () => {\r\n                result.origin.data.ref += 10;\r\n            });\r\n        }\r\n        if (result.actor.type === 'SameItem' && ['=', '+', '-'].includes(result.actor.data.op)) {\r\n            text(result.actor.data.op + ' ' + result.actor.data.ref, 1250, 100 + i * 240);\r\n            drawButton(1250, 150 + i * 240, 30, 30, '-1', () => {\r\n                result.actor.data.ref -= 1;\r\n            });\r\n            drawButton(1250, 190 + i * 240, 30, 30, '+1', () => {\r\n                result.actor.data.ref += 1;\r\n            });\r\n            drawButton(1290, 150 + i * 240, 30, 30, '-10', () => {\r\n                result.actor.data.ref -= 10;\r\n            });\r\n            drawButton(1290, 190 + i * 240, 30, 30, '+10', () => {\r\n                result.actor.data.ref += 10;\r\n            });\r\n        }\r\n        textAlign(CENTER, CENTER);\r\n        fill(255);\r\n        if (editor.workingRecipe.results.length > 1) {\r\n            result.chance = result.chance || 1;\r\n            textSize(32);\r\n            text(result.chance, 1400, 150 + i * 240);\r\n            textSize(16);\r\n            text('CHANCE', 1400, 120 + i * 240);\r\n            drawButton(1355, 200 + i * 240, 40, 40, '-1', () => {\r\n                result.chance -= 1;\r\n            });\r\n            drawButton(1405, 200 + i * 240, 40, 40, '+1', () => {\r\n                result.chance += 1;\r\n            });\r\n        }\r\n    }\r\n    textSize(16);\r\n    drawButton(600, 70 + editor.workingRecipe.results.length * 240, 340, 30, 'ADD', () => {\r\n        editor.workingRecipe.results = [...editor.workingRecipe.results, JSON.parse(JSON.stringify(editor.workingRecipe.results[editor.workingRecipe.results.length - 1]))];\r\n    });\r\n\r\n    \r\n    drawButton(300, 300, 100, 30, 'TIME', () => {\r\n        editor.workingRecipe.time = 60;\r\n        editor.workingRecipe.actor = undefined;\r\n        editor.workingRecipe.actorValue = undefined;\r\n    });\r\n    drawButton(300, 330, 100, 30, 'ACTOR', () => {\r\n        editor.workingRecipe.time = 0;\r\n        editor.workingRecipe.actor = {conditions: [{ type: 'Is', data: editor.actorItem }]};\r\n    });\r\n\r\n    let i = 0;\r\n    for (const type of ['~', '=', '<', '>', '<=', '>=']) {\r\n        drawButton(100, 300 + i * 40, 30, 30, type, () => {\r\n            if (i === 0) {\r\n                editor.workingRecipe.originValue = undefined; \r\n                return;\r\n            } else {\r\n                editor.workingRecipe.originValue = { op: type, ref: 0 };\r\n            }\r\n        });\r\n        if (editor.workingRecipe.actor) {\r\n            drawButton(300, 400 + i * 40, 30, 30, type, () => {\r\n                if (i === 0) {\r\n                    editor.workingRecipe.actorValue = undefined; \r\n                    return;\r\n                } else {\r\n                    editor.workingRecipe.actorValue = { op: type, ref: 0 };\r\n                }\r\n            })\r\n        }\r\n        i += 1;\r\n    }\r\n\r\n    fill(255);\r\n    textFont(Fonts.bold);\r\n    textSize(16);\r\n    textAlign(LEFT, TOP);\r\n    \r\n    if (editor.workingRecipe.originValue) {\r\n        text(editor.workingRecipe.originValue.op + ' ' + editor.workingRecipe.originValue.ref, 150, 300);\r\n        drawButton(150, 350, 30, 30, '-1', () => {\r\n            editor.workingRecipe.originValue.ref -= 1;\r\n        });\r\n        drawButton(190, 350, 30, 30, '+1', () => {\r\n            editor.workingRecipe.originValue.ref += 1;\r\n        });\r\n        drawButton(150, 390, 30, 30, '-10', () => {\r\n            editor.workingRecipe.originValue.ref -= 10;\r\n        });\r\n        drawButton(190, 390, 30, 30, '+10', () => {\r\n            editor.workingRecipe.originValue.ref += 10;\r\n        });\r\n    }\r\n\r\n    textAlign(LEFT, TOP);\r\n    if (editor.workingRecipe.actorValue) {\r\n        text(editor.workingRecipe.actorValue.op + ' ' + editor.workingRecipe.actorValue.ref, 350, 400);\r\n        drawButton(350, 450, 30, 30, '-1', () => {\r\n            editor.workingRecipe.actorValue.ref -= 1;\r\n        });\r\n        drawButton(390, 450, 30, 30, '+1', () => {\r\n            editor.workingRecipe.actorValue.ref += 1;\r\n        });\r\n        drawButton(350, 490, 30, 30, '-10', () => {\r\n            editor.workingRecipe.actorValue.ref -= 10;\r\n        });\r\n        drawButton(390, 490, 30, 30, '+10', () => {\r\n            editor.workingRecipe.actorValue.ref += 10;\r\n        });\r\n    }\r\n\r\n    drawButton(100, 600, 200, 40, 'COPY TO CLIPBOARD', () => {\r\n        navigator.clipboard.writeText(JSON.stringify(editor.workingRecipe));\r\n    })\r\n\r\n    textAlign(LEFT, TOP);\r\n    text('ORIGIN', width - 720, height - 60);\r\n    text('ACTOR', width - 545, height - 60);\r\n}\r\n\r\n\r\n\r\nfunction drawTreePage() {\r\n\r\n    translate(width / 2 + editor.offX, height / 2 - 200 + editor.offY);\r\n    if (input.mouse[LEFT] >= 1) {\r\n        editor.targetX += mouseX - pmouseX;\r\n        editor.targetY += mouseY - pmouseY;\r\n    }\r\n    editor.offX = lerp(editor.offX, editor.targetX, 0.5);\r\n    editor.offY = lerp(editor.offY, editor.targetY, 0.5);\r\n\r\n\r\n    function treeWidth(id, depth = 0) {\r\n        if (id === 0 || depth > 10) {\r\n            return 1;\r\n        }\r\n        const item = REGISTRY.getItem(id);\r\n        if (item.tags.includes('root') || item.tags.includes('natural')) {\r\n            return 1;\r\n        }\r\n        if (item.resultedBy.length === 0) {\r\n            return 1;\r\n        }\r\n        const recipe = item.resultedBy[0];\r\n        if (recipe.getAnActor() === 0) {\r\n            return 1;\r\n        }\r\n        return treeWidth(recipe.getAnOrigin(), depth + 1) + treeWidth(recipe.getAnActor(), depth + 1) + 1;\r\n    }\r\n\r\n    function drawTree(id, x, y, time = 0, depth = 0) {\r\n        noFill();\r\n        stroke(255);\r\n        rect(x - 10, y - 10, 20, 20);\r\n        noStroke();\r\n        if (id === -1) {\r\n            const dispTime = time > 86400 ? floor(time / 86400) + 'd' : time > 3600 ? floor(time / 3600) + 'h' : time > 60 ? floor(time / 60) + 'm' : time + 's';\r\n            fill(255);\r\n            textAlign(CENTER, CENTER);\r\n            textFont(Fonts.bold);\r\n            textSize(8);\r\n            text(dispTime, x, y);\r\n            return;\r\n        }\r\n        const item = REGISTRY.getItem(id);\r\n        textSize(16);\r\n        textAlign(LEFT, TOP);\r\n        drawItem(item.display, x - 8, y - 8);\r\n        textSize(8);\r\n        textAlign(CENTER, BOTTOM);\r\n        textFont(Fonts.regular)\r\n        fill(255);\r\n        text(item.name, x, y - 12);\r\n        if (depth > 10 || item.resultedBy.length === 0 || item.tags.includes('root') || item.tags.includes('natural')) {\r\n            return;\r\n        }\r\n\r\n        noFill();\r\n        stroke(255);\r\n        line(x, y + 10, x, y + 30);\r\n        line(x - 5, y + 15, x, y + 10);\r\n        line(x + 5, y + 15, x, y + 10);\r\n        \r\n        const origin = item.resultedBy[0].getAnOrigin();\r\n        const actor = item.resultedBy[0].getAnActor();\r\n        const isTimed = item.resultedBy[0].time > 0;\r\n        if (actor === 0 && !isTimed) {\r\n            line(x, y + 30, x, y + 60);\r\n            drawTree(origin, x, y + 60, 0, depth + 1);\r\n            return;\r\n        }\r\n        \r\n        const leftWidth = treeWidth(origin);\r\n        const rightWidth = isTimed ? 1 : treeWidth(actor, depth);\r\n        const leftX = x - leftWidth * 20;\r\n        const rightX = x + rightWidth * 20;\r\n        line(x, y + 30, leftX, y + 30);\r\n        line(leftX, y + 30, leftX, y + 40);\r\n        line(x, y + 30, rightX, y + 30);\r\n        line(rightX, y + 30, rightX, y + 40);\r\n        drawTree(origin, leftX, y + 60, 0, depth + 1);\r\n        if (!isTimed) {\r\n            drawTree(actor, rightX, y + 60, 0, depth + 1);\r\n        } else {\r\n            drawTree(-1, rightX, y + 60, item.resultedBy[0].time, depth + 1);\r\n        }\r\n    }\r\n\r\n    drawTree(editor.selectedItem, 0, 0);\r\n}\r\n\r\nfunction drawEditor() {\r\n    background(0);\r\n    textFont(Fonts.bold);\r\n    textSize(16);\r\n    fill(255);\r\n    noStroke();\r\n    textAlign(LEFT, TOP);\r\n    text('EDITOR', 4, 4);\r\n    \r\n    drawButton(0, 32, 64, 32, 'ITEMS', () => {\r\n        editor.workingRecipe = null;\r\n        editor.workingItem = null;\r\n        editor.selectedItem = 0;\r\n        editor.actorItem = 0;\r\n        editor.actorResultItem = 0;\r\n        editor.originResultItem = 0;\r\n        editor.tab = 'items';\r\n        localStorage.setItem('tab', 'items');\r\n    });\r\n    const goToRecipes = () => {\r\n        editor.tab = 'recipes';\r\n        editor.workingRecipe = null;\r\n        editor.workingItem = null;\r\n    };\r\n    if (input.keys['R'.charCodeAt(0)] === 1 && document.activeElement.tagName !== 'INPUT') {\r\n        goToRecipes();\r\n    }\r\n    drawButton(64, 32, 128, 32, 'RECIPES', goToRecipes);\r\n    if (editor.tab === 'items') {\r\n        drawItemsPage();\r\n    } else if (editor.tab === 'recipes') {\r\n        drawRecipesPage();\r\n    } else if (editor.tab === 'tree') {\r\n        drawTreePage();\r\n    }\r\n}"],"names":["localStorage","getItem"],"version":3,"file":"index.f8c720f7.js.map"}