function t(t){return t&&t.__esModule?t.default:t}function e(t,e,a,i){Object.defineProperty(t,e,{get:a,set:i,enumerable:!0,configurable:!0})}var a,i,o,r,s,n,c,d,l,h,p,y,m,g,u,I,f,w,N={};e(N,"Item",()=>M),e(N,"REGISTRY",()=>O),e(N,"ItemState",()=>S),e(N,"ItemConditionTypes",()=>h),e(N,"ItemCondition",()=>k),e(N,"ItemConditions",()=>B),e(N,"Recipe",()=>T),e(N,"refreshRegistry",()=>R);var x={};x=JSON.parse('[{"properties":{},"name":"Water","tags":["natural","blocking","static"],"display":[{"character":247,"color":41}]},{"properties":{},"name":"Ice","tags":["natural","blocking","static"],"display":[{"character":178,"color":43}]},{"properties":{},"name":"Red Cedar Tree","tags":["natural","blocking","static"],"display":[{"character":5,"color":26}]},{"properties":{"weight":10},"name":"Douglas Fir Tree","tags":["natural","blocking","static"],"display":[{"character":6,"color":37}]},{"properties":{"weight":10},"name":"Mountain Maple Tree","tags":["natural","blocking","static"],"display":[{"character":5,"color":35}]},{"properties":{},"name":"Western Juniper Tree","tags":["natural","blocking","static"],"display":[{"character":20,"color":29}]},{"properties":{},"name":"Large Boulder","tags":["natural","blocking","static"],"display":[{"character":30,"color":5}]},{"properties":{},"name":"Willow Tree","tags":["natural","blocking","static"],"display":[{"character":158,"color":34}]},{"properties":{"weight":5},"name":"Flint Deposit","tags":["natural","blocking","static"],"display":[{"character":111,"color":9}]},{"properties":{"weight":20},"name":"Fertile Soil","tags":["natural","static"],"display":[{"character":30,"color":20}]},{"properties":{"weight":10},"name":"Clay Deposit","tags":["natural","static"],"display":[{"character":30,"color":27}]},{"properties":{},"name":"Snow Bank","tags":["natural","blocking","static"],"display":[{"character":30,"color":8}]},{"properties":{"weight":10},"name":"Stone","tags":["natural"],"display":[{"character":7,"color":5}]},{"properties":{},"name":"Flint Deposit with Chip","tags":["static"],"display":[{"character":149,"color":9}]},{"properties":{"damage":1},"name":"Flint Chip","tags":["weapon","tool","knifelike","important"],"display":[{"character":47,"color":9}]},{"properties":{},"name":"Large Branch","tags":[],"display":[{"character":244,"color":20}]},{"properties":{},"name":"Shaft","tags":[],"display":[{"character":179,"color":20}]},{"properties":{},"name":"Stick","tags":[],"display":[{"character":45,"color":20}]},{"properties":{"weight":50},"name":"Ryegrass","tags":["natural","static"],"display":[{"character":35,"color":32}]},{"properties":{"weight":20},"name":"Cat Tail","tags":["natural","foodSource","static"],"display":[{"character":244,"color":34}]},{"properties":{},"name":"Cat Tail Stalk","tags":[],"display":[{"character":47,"color":34}]},{"properties":{"food":10},"name":"Cat Tail Head","tags":["edible"],"display":[{"character":45,"color":27}]},{"properties":{},"name":"Cordage Rope","tags":[],"display":[{"character":21,"color":24}]},{"properties":{},"name":"Cordage Thread","tags":[],"display":[{"character":21,"color":22}]},{"properties":{},"name":"Tied Stick","tags":[],"display":[{"character":45,"color":20},{"character":21,"color":24}]},{"properties":{"weight":5},"name":"Flat Rock","tags":["natural"],"display":[{"character":95,"color":7}]},{"properties":{"weight":5},"name":"Full Blackberry Bush","tags":["natural","foodSource","static"],"display":[{"character":42,"color":49}]},{"properties":{"food":5},"name":"Blackberry","tags":["edible"],"display":[{"character":249,"color":49}]},{"properties":{},"name":"Blackberry Bush with 5 Berries","tags":["foodSource","static"],"display":[{"character":42,"color":49},{"character":53,"color":49}]},{"properties":{},"name":"Blackberry Bush with 4 Berries","tags":["foodSource","static"],"display":[{"character":42,"color":49},{"character":52,"color":49}]},{"properties":{},"name":"Blackberry Bush with 3 Berries","tags":["foodSource","static"],"display":[{"character":42,"color":49},{"character":51,"color":49}]},{"properties":{},"name":"Blackberry Bush with 2 Berries","tags":["foodSource","static"],"display":[{"character":42,"color":49},{"character":50,"color":49}]},{"properties":{},"name":"Blackberry Bush with 1 Berry","tags":["foodSource","static"],"display":[{"character":42,"color":49},{"character":49,"color":49}]},{"properties":{},"name":"Empty Blackberry Bush","tags":["static"],"display":[{"character":42,"color":53}]},{"properties":{"damage":3},"name":"Flint Hatchet","tags":["weapon","tool","hatchetlike","important"],"display":[{"character":173,"color":9}]},{"properties":{"weight":10},"name":"Stinging Nettle","tags":["natural"],"display":[{"character":235,"color":34}]},{"properties":{},"name":"Blackberry Seed","tags":["seed"],"display":[{"character":249,"color":53}]},{"properties":{},"name":"Fertile Plot","tags":["static"],"display":[{"character":240,"color":20}]},{"properties":{},"name":"Seeded Blackberry Bush","tags":["static"],"display":[{"character":240,"color":20},{"character":249,"color":53}]},{"properties":{},"name":"Watered Blackberry Bush","tags":["static"],"display":[{"character":240,"color":20},{"character":236,"color":55}]},{"properties":{"food":10},"name":"Wild Potato","tags":["edible","natural"],"display":[{"character":7,"color":21}]},{"properties":{"food":10},"name":"Wild Carrot","tags":["edible","natural"],"display":[{"character":25,"color":29}]},{"properties":{"food":10},"name":"Wild Onion","tags":["edible","natural"],"display":[{"character":162,"color":33}]},{"properties":{},"name":"Fertile Soil Clump","tags":[],"display":[{"character":7,"color":20}]},{"properties":{},"name":"Clay Ball","tags":[],"display":[{"character":7,"color":27}]},{"properties":{"food":15},"name":"Chanterelle","tags":["edible","natural"],"display":[{"character":24,"color":32}]},{"properties":{"weight":5},"name":"Full Rose Hip Bush","tags":["foodSource","static","natural"],"display":[{"character":128,"color":60}]},{"properties":{"food":5},"name":"Rose Hip","tags":["edible"],"display":[{"character":46,"color":60}]},{"properties":{},"name":"Rose Hip Bush with 2 Hips","tags":["foodSource","static"],"display":[{"character":128,"color":60},{"character":50,"color":60}]},{"properties":{},"name":"Rose Hip Bush with 1 Hip","tags":["foodSource","static"],"display":[{"character":128,"color":60},{"character":49,"color":60}]},{"properties":{},"name":"Empty Rose Hip Bush","tags":[],"display":[{"character":128,"color":62}]},{"properties":{},"name":"Kindling","tags":[],"display":[{"character":37,"color":20}]},{"properties":{},"name":"Curved Branch","tags":[],"display":[{"character":40,"color":20}]},{"properties":{},"name":"Split Shaft","tags":[],"display":[{"character":179,"color":21}]},{"properties":{},"name":"Split Shaft with Notch","tags":[],"display":[{"character":124,"color":21}]},{"properties":{},"name":"Fire Starting Kit","tags":["important"],"display":[{"character":29,"color":21}]},{"properties":{"heat":20},"name":"Fire","tags":["static","heatSource","important"],"display":[{"character":127,"color":0},{"character":127,"color":28},{"character":127,"color":0},{"character":127,"color":31}]},{"properties":{"heat":12},"name":"Fire Embers","tags":["static","heatSource"],"display":[{"character":15,"color":0},{"character":15,"color":0},{"character":15,"color":28},{"character":15,"color":28}]},{"properties":{"heat":4},"name":"Ignited Kit","tags":["static","heatSource"],"display":[{"character":42,"color":0},{"character":42,"color":28}]},{"properties":{},"name":"Charcoal","tags":["static"],"display":[{"character":236,"color":5}]},{"properties":{},"name":"Bow","tags":["tool","important"],"display":[{"character":123,"color":20}]},{"properties":{},"name":"Bow Drill","tags":["important"],"display":[{"character":123,"color":20},{"character":45,"color":20}]},{"properties":{},"name":"Curved Shaft","tags":[],"display":[{"character":60,"color":20}]},{"properties":{"food":10},"name":"Tinder","tags":[],"display":[{"character":42,"color":27}]},{"properties":{},"name":"Red Cedar Tree with Tinder","tags":["static"],"display":[{"character":5,"color":26},{"character":42,"color":27}]},{"properties":{},"name":"Clay Deposit with 3 Balls","tags":["static"],"display":[{"character":30,"color":27},{"character":51,"color":27}]},{"properties":{},"name":"Clay Deposit with 2 Balls","tags":["static"],"display":[{"character":30,"color":27},{"character":50,"color":27}]},{"properties":{},"name":"Clay Deposit with 1 Ball","tags":["static"],"display":[{"character":30,"color":27},{"character":49,"color":27}]},{"properties":{},"name":"Rye Grain","tags":[],"display":[{"character":37,"color":32}]},{"properties":{},"name":"Straw","tags":[],"display":[{"character":186,"color":32}]},{"properties":{"size":3},"name":"Straw Basket","tags":["container","important"],"display":[{"character":118,"color":32}]},{"properties":{},"name":"Wet Clay Bowl","tags":[],"display":[{"character":118,"color":27}]},{"properties":{},"name":"Clay Bowl","tags":[],"display":[{"character":118,"color":22}]},{"properties":{},"name":"Clay Bowl with Water","tags":[],"display":[{"character":118,"color":22},{"character":4,"color":41}]},{"properties":{},"name":"Harvested Mountain Maple Tree","tags":["static"],"display":[{"character":5,"color":35},{"character":0,"color":1}]},{"properties":{},"name":"Harvested Douglas Fir Tree","tags":["static"],"display":[{"character":6,"color":37},{"character":0,"color":1}]},{"properties":{"food":15},"name":"Roasted Potato","tags":["edible"],"display":[{"character":7,"color":17}]},{"properties":{"food":15},"name":"Roasted Carrot","tags":["edible"],"display":[{"character":25,"color":17}]},{"properties":{"food":15},"name":"Roasted Onion","tags":["edible"],"display":[{"character":162,"color":17}]},{"properties":{"food":10},"name":"Roasted Stinging Nettle","tags":["edible"],"display":[{"character":235,"color":17}]},{"properties":{},"name":"Bowl of Uncooked Rose Hip Tea","tags":[],"display":[{"character":118,"color":22},{"character":4,"color":63}]},{"properties":{"food":15,"heal":20,"cure":1,"leftovers":73},"name":"Full Bowl of Rose Hip Tea","tags":["edible","healing"],"display":[{"character":118,"color":22},{"character":4,"color":0}]},{"properties":{},"name":"Bowl with Rye Dough","tags":[],"display":[{"character":118,"color":22},{"character":9,"color":32}]},{"properties":{},"name":"Bowl of Uncooked Stinging Nettle Tea","tags":[],"display":[{"character":118,"color":22},{"character":4,"color":37}]},{"properties":{"food":25,"heal":10,"cure":1,"leftovers":73},"name":"Bowl of Stinging Nettle Tea","tags":["edible","healing"],"display":[{"character":118,"color":22},{"character":4,"color":34}]},{"properties":{},"name":"Grave","tags":["static"],"display":[{"character":157,"color":7}]},{"properties":{},"name":"Harvested Willow Tree","tags":["static"],"display":[{"character":158,"color":34},{"character":0,"color":1}]},{"properties":{"food":5,"heal":5},"name":"Willow Bark","tags":["edible","healing"],"display":[{"character":126,"color":34}]},{"properties":{},"name":"Rye Flour","tags":[],"display":[{"character":174,"color":32}]},{"properties":{},"name":"Adobe","tags":[],"display":[{"character":81,"color":25}]},{"properties":{},"name":"Adobe Oven","tags":["important","static"],"display":[{"character":117,"color":25}]},{"properties":{},"name":"Adobe Forge","tags":["important","static"],"display":[{"character":234,"color":25}]},{"properties":{},"name":"Rye Dough","tags":[],"display":[{"character":9,"color":32}]},{"properties":{},"name":"Rye Dough on Flat Rock","tags":[],"display":[{"character":95,"color":7},{"character":9,"color":32}]},{"properties":{},"name":"Rye Bread on Flat Rock","tags":["static"],"display":[{"character":95,"color":7},{"character":233,"color":32}]},{"properties":{"food":30},"name":"Rye Bread","tags":["edible","delicious"],"display":[{"character":233,"color":32}]},{"properties":{},"name":"Iron Vein","tags":["natural","static"],"display":[{"character":94,"color":28}]},{"properties":{"weight":10},"name":"Raw Iron Ore","tags":["natural"],"display":[{"character":22,"color":28}]},{"properties":{},"name":"Wet Clay Plate","tags":[],"display":[{"character":95,"color":27}]},{"properties":{},"name":"Clay Plate","tags":[],"display":[{"character":95,"color":22}]},{"properties":{"heat":8},"name":"Lit Torch","tags":["heatSource"],"display":[{"character":26,"color":0},{"character":26,"color":31}]},{"properties":{},"name":"Charcoal Piece","tags":[],"display":[{"character":96,"color":5}]},{"properties":{"heat":12},"name":"Lit Oven","tags":["heatSource","static"],"display":[{"character":117,"color":0},{"character":117,"color":31}]},{"properties":{"heat":16},"name":"Lit Forge","tags":["heatSource","static"],"display":[{"character":234,"color":0},{"character":234,"color":31}]},{"properties":{},"name":"Bowl with Iron Ore","tags":[],"display":[{"character":118,"color":22},{"character":22,"color":28}]},{"properties":{},"name":"Bowl with Charcoal","tags":[],"display":[{"character":118,"color":22},{"character":96,"color":5}]},{"properties":{},"name":"Bowl with Steel Prerequisites","tags":[],"display":[{"character":118,"color":22},{"character":22,"color":28},{"character":96,"color":5}]},{"properties":{"heat":16},"name":"Forge with Warming Iron Ore","tags":["static","heatSource"],"display":[{"character":234,"color":0},{"character":22,"color":28},{"character":234,"color":31},{"character":22,"color":28}]},{"properties":{"heat":16},"name":"Forge with Hot Iron Ore","tags":["static","heatSource"],"display":[{"character":234,"color":0},{"character":22,"color":31},{"character":234,"color":31},{"character":22,"color":0}]},{"properties":{},"name":"Wooden Tongs","tags":[],"display":[{"character":120,"color":20}]},{"properties":{},"name":"Wooden Tongs with Hot Iron","tags":[],"display":[{"character":120,"color":20},{"character":22,"color":0},{"character":120,"color":20},{"character":22,"color":31}]},{"properties":{},"name":"Flat Rock with Hot Iron","tags":["static"],"display":[{"character":95,"color":7},{"character":22,"color":0},{"character":95,"color":7},{"character":22,"color":31}]},{"properties":{},"name":"Flat Rock with Hot Iron Ingot","tags":["static"],"display":[{"character":95,"color":7},{"character":169,"color":0}]},{"properties":{},"name":"Flat Rock with Iron Ore","tags":["static"],"display":[{"character":95,"color":7},{"character":22,"color":28}]},{"properties":{},"name":"Flat Rock with Iron Ingot","tags":["static"],"display":[{"character":95,"color":7},{"character":169,"color":28}]},{"properties":{},"name":"Iron Ingot","tags":["resource","important"],"display":[{"character":169,"color":28}]},{"properties":{},"name":"Smithing Hammer","tags":["tool","important"],"display":[{"character":231,"color":28}]},{"properties":{},"name":"Unforged Steel Crucible","tags":[],"display":[{"character":110,"color":22},{"character":22,"color":28},{"character":96,"color":5}]},{"properties":{"heat":16},"name":"Forge with Warming Steel Crucible","tags":["static","heatSource"],"display":[{"character":234,"color":0},{"character":110,"color":28},{"character":234,"color":31},{"character":110,"color":28}]},{"properties":{"heat":16},"name":"Forge with Hot Steel Crucible","tags":["static","heatSource"],"display":[{"character":234,"color":0},{"character":110,"color":31},{"character":234,"color":31},{"character":110,"color":0}]},{"properties":{},"name":"Wooden Tongs with Hot Steel Crucible","tags":[],"display":[{"character":120,"color":20},{"character":110,"color":0},{"character":120,"color":20},{"character":110,"color":31}]},{"properties":{},"name":"Flat Rock with Hot Steel Crucible","tags":["static"],"display":[{"character":95,"color":7},{"character":110,"color":0}]},{"properties":{},"name":"Flat Rock with Steel Crucible","tags":["static"],"display":[{"character":95,"color":7},{"character":110,"color":22}]},{"properties":{},"name":"Forged Steel Crucible","tags":["static"],"display":[{"character":110,"color":22}]},{"properties":{},"name":"Bowl with Steel Ingot","tags":["static"],"display":[{"character":118,"color":22},{"character":254,"color":7}]},{"properties":{"food":20000},"name":"Steel Ingot","tags":["edible"],"display":[{"character":254,"color":7}]}]');var b={};b=JSON.parse('[{"results":[{"origin":{"type":"NewItem","data":29},"actor":{"type":"NewItem","data":28}}],"origin":{"conditions":[{"type":"Is","data":27}]}},{"results":[{"origin":{"type":"NewItem","data":30},"actor":{"type":"NewItem","data":28}}],"origin":{"conditions":[{"type":"Is","data":29}]}},{"results":[{"origin":{"type":"NewItem","data":31},"actor":{"type":"NewItem","data":28}}],"origin":{"conditions":[{"type":"Is","data":30}]}},{"results":[{"origin":{"type":"NewItem","data":32},"actor":{"type":"NewItem","data":28}}],"origin":{"conditions":[{"type":"Is","data":31}]}},{"results":[{"origin":{"type":"NewItem","data":33},"actor":{"type":"NewItem","data":28}}],"origin":{"conditions":[{"type":"Is","data":32}]}},{"results":[{"origin":{"type":"NewItem","data":34},"actor":{"type":"NewItem","data":28}}],"origin":{"conditions":[{"type":"Is","data":33}]}},{"results":[{"origin":{"type":"NewItem","data":25},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":18}]},"actor":{"conditions":[{"type":"Is","data":23}]}},{"results":[{"origin":{"type":"NewItem","data":23},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":21}]},"actor":{"conditions":[{"type":"Is","data":21}]}},{"results":[{"origin":{"type":"NewItem","data":23},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":36}]},"actor":{"conditions":[{"type":"Is","data":36}]}},{"results":[{"origin":{"type":"NewItem","data":21},"actor":{"type":"NewItem","data":22}}],"origin":{"conditions":[{"type":"Is","data":20}]}},{"results":[{"origin":{"type":"NewItem","data":14},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":9}]},"actor":{"conditions":[{"type":"Is","data":13}]}},{"results":[{"origin":{"type":"NewItem","data":9},"actor":{"type":"NewItem","data":15}}],"origin":{"conditions":[{"type":"Is","data":14}]}},{"results":[{"origin":{"type":"NewItem","data":17},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":16}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":18},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":17}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":37},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":28}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":38},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":44}]},"actor":{"conditions":[{"type":"Is","data":13}]}},{"results":[{"origin":{"type":"NewItem","data":44},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":10}]}},{"results":[{"origin":{"type":"NewItem","data":39},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":38}]},"actor":{"conditions":[{"type":"Is","data":37}]}},{"results":[{"origin":{"type":"NewItem","data":49},"actor":{"type":"NewItem","data":48}}],"origin":{"conditions":[{"type":"Is","data":47}]}},{"results":[{"origin":{"type":"NewItem","data":50},"actor":{"type":"NewItem","data":48}}],"origin":{"conditions":[{"type":"Is","data":49}]}},{"results":[{"origin":{"type":"NewItem","data":51},"actor":{"type":"NewItem","data":48}}],"origin":{"conditions":[{"type":"Is","data":50}]}},{"results":[{"origin":{"type":"NewItem","data":52},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":16}]},"actor":{"conditions":[{"type":"Is","data":35}]}},{"results":[{"origin":{"type":"NewItem","data":35},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":25}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":54},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":17}]},"actor":{"conditions":[{"type":"Is","data":35}]}},{"results":[{"origin":{"type":"NewItem","data":55},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":54}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":56},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":55}]},"actor":{"conditions":[{"type":"Is","data":64}]}},{"results":[{"origin":{"type":"NewItem","data":63},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":53}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":64},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":22}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":57},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":59}]},"actor":{"conditions":[{"type":"Is","data":52}]}},{"results":[{"origin":{"type":"NewItem","data":58},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":57}]},"time":86400},{"results":[{"origin":{"type":"NewItem","data":60},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":58}]},"time":86400},{"results":[{"origin":{"type":"NewItem","data":59},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":56}]},"actor":{"conditions":[{"type":"Is","data":62}]}},{"results":[{"origin":{"type":"NewItem","data":61},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":63}]},"actor":{"conditions":[{"type":"Is","data":23}]}},{"results":[{"origin":{"type":"NewItem","data":62},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":61}]},"actor":{"conditions":[{"type":"Is","data":18}]}},{"results":[{"origin":{"type":"NewItem","data":65},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":3}]},"actor":{"conditions":[{"type":"Is","data":15}]}},{"results":[{"origin":{"type":"NewItem","data":3},"actor":{"type":"NewItem","data":64}}],"origin":{"conditions":[{"type":"Is","data":65}]}},{"results":[{"origin":{"type":"NewItem","data":66},"actor":{"type":"NewItem","data":45}}],"origin":{"conditions":[{"type":"Is","data":11}]}},{"results":[{"origin":{"type":"NewItem","data":67},"actor":{"type":"NewItem","data":45}}],"origin":{"conditions":[{"type":"Is","data":66}]}},{"results":[{"origin":{"type":"NewItem","data":68},"actor":{"type":"NewItem","data":45}}],"origin":{"conditions":[{"type":"Is","data":67}]}},{"results":[{"origin":{"type":"NewItem","data":45},"actor":{"type":"NewItem","data":45}}],"origin":{"conditions":[{"type":"Is","data":68}]}},{"results":[{"origin":{"type":"NewItem","data":69},"actor":{"type":"NewItem","data":70}}],"origin":{"conditions":[{"type":"Is","data":19}]}},{"results":[{"origin":{"type":"NewItem","data":72},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":45}]},"actor":{"conditions":[{"type":"Is","data":13}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":73}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":72}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":74}}],"origin":{"conditions":[{"type":"Is","data":1}]},"actor":{"conditions":[{"type":"Is","data":73}]}},{"results":[{"origin":{"type":"NewItem","data":76},"actor":{"type":"NewItem","data":16}}],"origin":{"conditions":[{"type":"Is","data":4}]}},{"results":[{"origin":{"type":"NewItem","data":75},"actor":{"type":"NewItem","data":53}}],"origin":{"conditions":[{"type":"Is","data":5}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":77}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":41}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":78}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":42}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":79}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":43}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":80}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":36}]}},{"results":[{"origin":{"type":"NewItem","data":4},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":76}]},"time":14400},{"results":[{"origin":{"type":"NewItem","data":5},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":75}]},"time":14400},{"results":[{"origin":{"type":"NewItem","data":81},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":74}]},"actor":{"conditions":[{"type":"Is","data":48}]}},{"results":[{"origin":{"type":"NewItem","data":84},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":74}]},"actor":{"conditions":[{"type":"Is","data":36}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":82}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":81}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":85}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":84}]}},{"results":[{"origin":{"type":"NewItem","data":20},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":22}]},"time":28800},{"results":[{"origin":{"type":"NewItem","data":57},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":58}]},"actor":{"conditions":[{"type":"Is","data":52}]}},{"results":[{"origin":{"type":"NewItem","data":87},"actor":{"type":"NewItem","data":88}}],"origin":{"conditions":[{"type":"Is","data":8}]}},{"results":[{"origin":{"type":"NewItem","data":89},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":69}]},"actor":{"conditions":[{"type":"Is","data":13}]}},{"results":[{"origin":{"type":"NewItem","data":90},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":45}]},"actor":{"conditions":[{"type":"Is","data":70}]}},{"results":[{"origin":{"type":"NewItem","data":93},"actor":{"type":"NewItem","data":73}}],"origin":{"conditions":[{"type":"Is","data":89}]},"actor":{"conditions":[{"type":"Is","data":74}]}},{"results":[{"origin":{"type":"NewItem","data":94},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":26}]},"actor":{"conditions":[{"type":"Is","data":93}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":101}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":18}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":100}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":99}]}},{"results":[{"origin":{"type":"NewItem","data":99},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":45}]},"actor":{"conditions":[{"type":"Is","data":26}]}},{"results":[{"origin":{"type":"NewItem","data":60},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":101}]},"time":3600},{"results":[{"origin":{"type":"NewItem","data":102},"actor":{"type":"NewItem","data":102}}],"origin":{"conditions":[{"type":"Is","data":60}]}},{"results":[{"origin":{"type":"NewItem","data":91},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":90}]},"actor":{"conditions":[{"type":"Is","data":90}]}},{"results":[{"origin":{"type":"NewItem","data":92},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":91}]},"actor":{"conditions":[{"type":"Is","data":90}]}},{"results":[{"origin":{"type":"NewItem","data":103},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":91}]},"actor":{"conditions":[{"type":"Is","data":101}]}},{"results":[{"origin":{"type":"NewItem","data":104},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":92}]},"actor":{"conditions":[{"type":"Is","data":101}]}},{"results":[{"origin":{"type":"NewItem","data":91},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":103}]},"time":28800},{"results":[{"origin":{"type":"NewItem","data":92},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":104}]},"time":28800},{"results":[{"origin":{"type":"NewItem","data":57},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":52}]},"actor":{"conditions":[{"type":"Is","data":101}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":95}}],"origin":{"conditions":[{"type":"Is","data":103}]},"actor":{"conditions":[{"type":"Is","data":94}]}},{"results":[{"origin":{"type":"NewItem","data":26},"actor":{"type":"NewItem","data":96}}],"origin":{"conditions":[{"type":"Is","data":95}]}},{"results":[{"origin":{"type":"NewItem","data":71},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":70}]},"actor":{"conditions":[{"type":"Is","data":70}]}},{"results":[{"origin":{"type":"SameItem","data":{"op":"","ref":0}},"actor":{"type":"NewItem","data":102}}],"origin":{"conditions":[{"type":"Is","data":57}]},"actor":{"conditions":[{"type":"Is","data":22}]}},{"results":[{"origin":{"type":"NewItem","data":105},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":73}]},"actor":{"conditions":[{"type":"Is","data":98}]}},{"results":[{"origin":{"type":"NewItem","data":106},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":73}]},"actor":{"conditions":[{"type":"Is","data":102}]}},{"results":[{"origin":{"type":"NewItem","data":107},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":105}]},"actor":{"conditions":[{"type":"Is","data":102}]}},{"results":[{"origin":{"type":"NewItem","data":107},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":106}]},"actor":{"conditions":[{"type":"Is","data":98}]}},{"results":[{"origin":{"type":"NewItem","data":108},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":104}]},"actor":{"conditions":[{"type":"Is","data":98}]}},{"results":[{"origin":{"type":"NewItem","data":109},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":108}]},"time":600},{"results":[{"origin":{"type":"NewItem","data":110},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":18}]},"actor":{"conditions":[{"type":"Is","data":18}]}},{"results":[{"origin":{"type":"NewItem","data":104},"actor":{"type":"NewItem","data":111}}],"origin":{"conditions":[{"type":"Is","data":109}]},"actor":{"conditions":[{"type":"Is","data":110}]}},{"results":[{"origin":{"type":"NewItem","data":114},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":112}]},"time":3600},{"results":[{"origin":{"type":"NewItem","data":26},"actor":{"type":"NewItem","data":98}}],"origin":{"conditions":[{"type":"Is","data":114}]}},{"results":[{"origin":{"type":"NewItem","data":112},"actor":{"type":"NewItem","data":110}}],"origin":{"conditions":[{"type":"Is","data":26}]},"actor":{"conditions":[{"type":"Is","data":111}]}},{"results":[{"origin":{"type":"NewItem","data":113},"actor":{"type":"SameItem","data":{"op":"","ref":0}}}],"origin":{"conditions":[{"type":"Is","data":112}]},"actor":{"conditions":[{"type":"Is","data":13}]}},{"results":[{"origin":{"type":"NewItem","data":115},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":113}]},"time":1800},{"results":[{"origin":{"type":"NewItem","data":26},"actor":{"type":"NewItem","data":116}}],"origin":{"conditions":[{"type":"Is","data":115}]}},{"results":[{"origin":{"type":"NewItem","data":118},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":107}]},"actor":{"conditions":[{"type":"Is","data":100}]}},{"results":[{"origin":{"type":"NewItem","data":119},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":104}]},"actor":{"conditions":[{"type":"Is","data":118}]}},{"results":[{"origin":{"type":"NewItem","data":120},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":119}]},"time":600},{"results":[{"origin":{"type":"NewItem","data":104},"actor":{"type":"NewItem","data":121}}],"origin":{"conditions":[{"type":"Is","data":120}]},"actor":{"conditions":[{"type":"Is","data":110}]}},{"results":[{"origin":{"type":"NewItem","data":122},"actor":{"type":"NewItem","data":110}}],"origin":{"conditions":[{"type":"Is","data":26}]},"actor":{"conditions":[{"type":"Is","data":121}]}},{"results":[{"origin":{"type":"NewItem","data":123},"actor":{"type":""}}],"origin":{"conditions":[{"type":"Is","data":122}]},"time":1800},{"results":[{"origin":{"type":"NewItem","data":26},"actor":{"type":"NewItem","data":124}}],"origin":{"conditions":[{"type":"Is","data":123}]}},{"results":[{"origin":{"type":"NewItem","data":125},"actor":{"type":"NewItem","data":100}}],"origin":{"conditions":[{"type":"Is","data":124}]}},{"results":[{"origin":{"type":"NewItem","data":73},"actor":{"type":"NewItem","data":126}}],"origin":{"conditions":[{"type":"Is","data":125}]}}]');class M{static #t=this.DEFAULT_ITEM=new M(0,"",[],[{character:0,color:0}]);constructor(t,e,a,i,o={}){this.properties={},this.id=t,this.name=e,this.tags=a,this.display=i,this.properties=o}get usedIn(){return(O&&O.uses.get(this.id)?.map(t=>O.getRecipe(t))||[]).filter((t,e,a)=>a.indexOf(t)===e)}get resultedBy(){return(O&&O.results.get(this.id)?.map(t=>O.getRecipe(t))||[]).filter((t,e,a)=>a.indexOf(t)===e)}get active(){return this.usedIn.some(t=>t.time)}get root(){return this.tags.includes("root")||this.tags.includes("natural")||0===this.resultedBy.length}depth(){return O.depths.get(this.id)||0}resources(){return[]}required(t=[],e=new Set){return t.includes(this.id)||e.has(this.id)?0:(e.add(this.id),this.root)?1:this.resultedBy.reduce((a,i)=>a+i.used().reduce((a,i)=>a+O.getItem(i).required(t,e),0),0)}// recursive
isNeededToMake(t){return this.id===t.id||!this.root&&this.resultedBy.some(e=>O.getItem(e.getAnOrigin()).isNeededToMake(t)||e.actor&&O.getItem(e.getAnActor()).isNeededToMake(t))}}class S{constructor(t){this.value=0,this.time=0,this.id=t}get item(){return O.getItem(this.id)}clone(){let t=new S(this.id);return t.value=this.value,t.time=this.time,t}}function v(t,e,a){switch(e){case"=":return t===a;case">":return t>a;case"<":return t<a;case">=":return t>=a;case"<=":return t<=a;default:return!1}}(a=h||(h={})).None="",a.All="All",a.Is="Is",a.IsNot="IsNot",a.WithTag="WithTag",a.WithoutTag="WithoutTag",a.PropertyIs="PropertyIs",a.PropertyIsNot="PropertyIsNot";class k{static matches(t,e){switch(e.type){case"All":return!0;case"Is":return t.id===e.data;case"IsNot":return t.id!==e.data;case"WithTag":return t.tags.indexOf(e.data)>-1;case"WithoutTag":return -1===t.tags.indexOf(e.data);case"PropertyIs":return v(t.properties[e.data.property],e.data.op,e.data.ref);case"PropertyIsNot":return!v(t.properties[e.data.property],e.data.op,e.data.ref);default:return!1}}}class B{static matches(t,e){return t.conditions.every(t=>k.matches(e,t))}}(i=p||(p={})).None="",i.SameItem="SameItem",i.NewItem="NewItem";class T{constructor(t,e,a,i){this.results=[],this.id=t,this.origin=e,this.results=a,this.originValue=i.originValue,this.time=i.time,this.actor=i.actor}willOccur(t,e,a){return B.matches(this.origin,t.item)&&(!this.originValue||v(t.value,this.originValue.op,this.originValue.ref))&&(!this.time||a-t.time>=this.time)&&(!this.actor||e&&B.matches(this.actor,e.item)&&(!this.actorValue||v(e.value,this.actorValue.op,this.actorValue.ref)))}static getRandomResult(t,e){if(0===t.length)return{origin:{type:"",data:null}};if(1===t.length)return t[0];let a=0;for(let e=0;e<t.length;e++)a+=t[e].chance||1;let i=0;for(let o=0;o<t.length;o++)if((i+=(t[o].chance||1)/a)>=e)return t[o];return t[0]}origins(){return O&&O.query(this.origin)||[]}actors(){return O&&O.query(this.actor||{conditions:[{type:"",data:null}]})||[]}used(){return[...this.origins(),...this.actors()]}simpleUsed(){return[...0===this.getAnOrigin()?[]:[this.getAnOrigin()],...0===this.getAnActor()?[]:[this.getAnActor()]]}resulted(){let t=[];for(let e of this.results)"NewItem"===e.origin.type?t.push(e.origin.data):"SameItem"===e.origin.type&&t.push(...this.origins()),e.actor&&("NewItem"===e.actor.type?t.push(e.actor.data):"SameItem"===e.actor.type&&t.push(...this.actors()));// remove duplicates
return t.filter((t,e,a)=>a.indexOf(t)===e)}notableResulted(){let t=[];for(let e of this.results)"NewItem"===e.origin.type&&t.push(e.origin.data),e.actor&&"NewItem"===e.actor.type&&t.push(e.actor.data);// remove duplicates
return t.filter((t,e,a)=>a.indexOf(t)===e)}getAnOrigin(){return this.origins()[0]||0}getAnActor(){return this.actor&&this.actors()[0]||0}static getResult(t,e){let a=null;switch(e.type){case"SameItem":if(a=t.clone(),e.data)switch(e.data.op){case"=":a.value=e.data.ref;break;case"+":a.value+=e.data.ref;break;case"-":a.value-=e.data.ref}break;case"NewItem":a=new S(e.data)}return a}static getOptionalResult(t,e){let a=null;switch(e.type){case"SameItem":if(!t)return null;if(console.log(t),a=t.clone(),e.data)switch(e.data.op){case"=":a.value=e.data.ref;break;case"+":a.value+=e.data.ref;break;case"-":a.value-=e.data.ref}break;case"NewItem":a=new S(e.data)}return a}getResults(t,e,a){if(0===this.results.length)return[null,null];let i=a?T.getRandomResult(this.results,a):this.results[0];return[T.getResult(t,i.origin),i.actor?T.getOptionalResult(e,i.actor):null]}}const O=new class{constructor(){this.items=[],this.depths=new Map,this.recipes=[],this.uses=new Map,this.results=new Map,this.items=[],this.recipes=[]}setItems(t){(t=[M.DEFAULT_ITEM,...t]).forEach(t=>{let e=this.items.length;this.items.push(new M(e,t.name,t.tags,t.display,t.properties))})}setRecipes(t){t.forEach(t=>{let e=this.recipes.length;this.recipes.push(new T(e,t.origin,t.results,t))})}refresh(){for(let t of(this.recipes.forEach((t,e)=>{this.recipes[e].used().forEach(t=>{this.uses.has(t)||this.uses.set(t,[]),this.uses.get(t)?.push(e)}),this.recipes[e].notableResulted().forEach(t=>{this.results.has(t)||this.results.set(t,[]),this.results.get(t)?.push(e)})}),this.items))t.root&&this.depths.set(t.id,0);let t=!0;for(;t;)for(let e of(t=!1,this.items)){if(e.root||this.depths.has(e.id))continue;let a=e.resultedBy.filter(t=>t.used().every(t=>this.depths.has(t)));if(0===a.length)continue;let i=Math.max(...a.map(t=>Math.max(...t.used().map(t=>this.depths.get(t)||0))))+1;this.depths.set(e.id,i),t=!0}}query(t){let e=[];return this.items.forEach(a=>{B.matches(t,a)&&e.push(a.id)}),e}itemsData(){return JSON.stringify(this.items.map(t=>({...t,id:void 0})))}recipesData(){return JSON.stringify(this.recipes.map(t=>({...t,id:void 0})))}get itemCount(){return this.items.length}getItem(t){return this.items[t]||M.DEFAULT_ITEM}getRecipe(t){return this.recipes[t]}};O.setItems(/*@__PURE__*/t(x)),O.setRecipes(/*@__PURE__*/t(b)),O.refresh();const R=()=>{O.setItems(JSON.parse(O.itemsData())),O.setRecipes(JSON.parse(O.recipesData())),O.refresh()};var A={};Object.defineProperty(A,"__esModule",{value:!0,configurable:!0}),e(A,"WORLD_SIZE",()=>C),e(A,"CHUNK_SIZE",()=>j),e(A,"Chunk",()=>F),e(A,"World",()=>D),e(A,"mlerp",()=>H),e(A,"generateName",()=>E),e(A,"generateId",()=>P),e(A,"hashString",()=>W),e(A,"sigmoid",()=>L),e(A,"normal",()=>z),e(A,"default",()=>_),e(A,"generateGroup",()=>J),e(A,"assignReputations",()=>G);const C=40,j=10;class F{constructor(t,e,a){this.x=t,this.y=e,this.items=a}get(t,e){return this.items[e*j+t]||null}set(t,e,a){this.items[e*j+t]=a}has(t){return this.items.some(e=>null!=e&&B.matches(t,e.item))}find(t){let e=this.items.findIndex(e=>null!=e&&B.matches(t,e.item));return -1===e?null:{x:this.x*j+e%j,y:this.y+Math.floor(e/j),item:this.items[e]}}get active(){return this.items.some(t=>null!=t&&t.item.active)}get heatProduced(){return this.items.reduce((t,e)=>t+(e?.item.properties.heat||0),0)}}class D{constructor(){this.chunks=[],this.heat=[];for(let t=0;t<C;t+=1)for(let e=0;e<C;e+=1)this.chunks.push(new F(e,t,Array(j*j).fill(null))),this.heat.push(0)}update(t){var e;for(let a=0;a<C;a+=1)for(let i=0;i<C;i+=1){let o=a*C+i;this.heat[o]=(e=this.heat[o],e+(t+this.chunks[o].heatProduced-e)*.05)}// disperse
for(let t=0;t<C;t+=1)for(let e=0;e<C;e+=1){let a=t*C+e,i=this.heat[a],o=e>0?this.heat[a-1]:i,r=e<C-1?this.heat[a+1]:i,s=t>0?this.heat[a-C]:i,n=t<C-1?this.heat[a+C]:i,c=(o+r+s+n)/4;c>i?this.heat[a]=i+(c-i)*.2:this.heat[a]=i+(c-i)*.01}}get size(){return C*j}getChunk(t,e){return this.chunks[e*C+t]}active(){return this.chunks.filter(t=>t.active).map(t=>{let e=[],a=t.items.findIndex(t=>null!=t&&t.item.active);for(;-1!==a;)e.push({x:t.x*j+a%j,y:t.y*j+Math.floor(a/j),item:t.items[a]}),a=t.items.findIndex((t,e)=>e>a&&null!=t&&t.item.active);return e}).flat()}get(t,e){return this.getChunk(Math.floor(t/j),Math.floor(e/j))?.get(t%j,e%j)||null}set(t,e,a){this.getChunk(Math.floor(t/j),Math.floor(e/j)).set(t%j,e%j,a)}localWorld(t,e,a){let i=[];for(let o=-a;o<=a;o+=1)for(let r=-a;r<=a;r+=1){let a=t+r,s=e+o;a<0||s<0||a>=this.size||s>=this.size?i.push({x:a,y:s,item:null}):i.push({x:a,y:s,item:this.get(a,s)})}return i}}function E(){let t="eaiou",e="tnsrhldcymfwgpbvkxjqz",a=Math.round(3*Math.random()+1),i="";for(let o=0;o<a;o+=1)i+=e[Math.floor(Math.random()**2*e.length)]+t[Math.floor(Math.random()*t.length)],.5>Math.random()&&(i+=e[Math.floor(Math.random()**2*e.length)]);return i}function P(){return Math.random().toString(36).substring(2,9)}function W(t){let e=0;for(let a=0;a<t.length;a+=1)e+=t.charCodeAt(a),e+=e<<10,e^=e>>6,e+=e<<3;return e}function H(t,e,a){return t+(e-t)*a}function L(t){return 1/(1+Math.exp(-t))}function z(t){return Math.exp(-(t**2))}(o=y||(y={})).Health="health",o.Hunger="hunger",o.Temperature="temperature",o.Boredom="boredom",(r=m||(m={}))[r.Here=0]="Here",r[r.Up=1]="Up",r[r.Left=2]="Left",r[r.Down=3]="Down",r[r.Right=4]="Right",(s=g||(g={})).Nothing="nothing",s.Move="move",s.Interact="interact",s.Eat="eat";const q={Nothing:()=>({type:"nothing",data:{}}),Move:t=>({type:"move",data:{direction:t}}),Interact:t=>({type:"interact",data:{direction:t}}),Eat:()=>({type:"eat",data:{}})};(n=u||(u={})).Person="person",n.Place="place",n.Thing="thing";const U={Person:t=>({type:"person",data:{id:t}}),Place:(t,e)=>({type:"place",data:{x:t,y:e}}),Thing:t=>({type:"thing",data:{selector:t}})};(c=I||(I={})).Location="location",c.PersonKnows="personKnows",c.Exists="exists";const K={Location:(t,e,a,i)=>({type:"location",data:{noun:t,x:e,y:a},time:i}),PersonKnows:(t,e,a)=>({type:"personKnows",data:{person:t,memory:e},time:a}),Exists:(t,e)=>({type:"exists",data:{noun:t},time:e})};(d=f||(f={})).FulfillNeed="fulfillNeed",d.Obtain="obtain",d.BoredomTask="boredomTask",(l=w||(w={})).Craft="craft",l.Organize="organize",l.Farm="farm",l.Build="build";const V={FulfillNeed:t=>({type:"fulfillNeed",data:{need:t}}),Obtain:(t,e=!1)=>({type:"obtain",data:{noun:t,another:e,children:[]}}),BoredomTask:(t,e)=>({type:"boredomTask",data:{task:t,expiry:e}})};class _{constructor(t,e,a,i,o,r){this.home=null,this.health=100,this.hunger=100,this.temperature=0,this.score=0,this.reputations={},this.needs={health:0,hunger:0,temperature:0,boredom:0},this.memory=[],this.objectives=[],this.long={},this.short={},this.common={},this.holding=null,this.nextAction=null,this.id=t,this.name=e,this.surname=a,this.born=i,this.x=o,this.y=r,this.gender=Math.random()}male(){return this.gender<.5}female(){return this.gender>.5}get fullName(){return`${this.name} ${this.surname}`}get color(){return Math.abs(W(this.surname))%64}get altColor(){return Math.abs(W(this.name))%64}get display(){let t=[{character:this.male()?11:12,color:this.color}],e=this.holding?.item.display??[];return[...t,...e]}get known(){return this.memory.filter(t=>"location"===t.type&&"thing"===t.data.noun.type).map(t=>O.query(t.data.noun.data.selector)).flat().filter((t,e,a)=>a.indexOf(t)===e)}hungerSeverity(){return this.hunger<20?1:L((50-this.hunger)/10)}update(t){var e;let a=t.heat[this.outerIndex()];this.temperature=(e=this.temperature)+(a-e)*.02,this.score+=(this.temperature/20)**3,this.health<100&&(this.score-=((100-this.health)/100)**2,this.health+=.01*L((this.hunger-50)/10));let i=1-L(this.temperature/2);this.hunger-=.03*(.1+.9*i),this.hunger<0&&(this.health-=1*i*i,this.hunger=0),this.hunger>100&&(this.health+=this.hunger-100,this.hunger=100),this.health>100&&(this.score+=(this.health-100)**2,this.health=100),this.score<0&&(this.score=0)}think(t,e,a){// compute needs
this.needs.health=(80-Math.min(this.health,80))**3,this.needs.hunger=(90-Math.min(this.hunger,90))**2,this.needs.temperature=Math.max((5-this.temperature)*10,0),this.needs.boredom=this.health>80&&this.hunger>80?60:0;let i=t.localWorld(this.x,this.y,10),o=e.filter(t=>10>Math.abs(t.x-this.x)&&10>Math.abs(t.y-this.y)),r=[{x:this.x,y:this.y},{x:this.x,y:this.y-1},{x:this.x-1,y:this.y},{x:this.x,y:this.y+1},{x:this.x+1,y:this.y}];for(let t of(// forget memories after a day
this.memory=this.memory.filter(t=>a-t.time<86400),o))this.memory=this.memory.filter(e=>!("exists"===e.type&&"person"===e.data.noun.type&&e.data.noun.data.id===t.id)),t.id!==this.id&&this.memory.push(K.Exists(U.Person(t.id),a)),this.memory=this.memory.filter(e=>!("location"===e.type&&"person"===e.data.noun.type&&e.data.noun.data.id===t.id)),t.id!==this.id&&this.memory.push(K.Location({type:"person",data:{id:t.id}},t.x,t.y,a));for(let{x:t,y:e,item:r}of(// if we find out an item is missing, remove it from memory
this.memory=this.memory.filter(t=>{if("location"!=t.type||"thing"!=t.data.noun.type||t.data.x<this.x-10||t.data.x>this.x+10||t.data.y<this.y-10||t.data.y>this.y+10)return!0;let e=i.find(({x:e,y:a})=>e===t.data.x&&a===t.data.y);return!(null==e||null==e.item||!B.matches(t.data.noun.data.selector,e.item.item));// eww
}),// similar but for people
this.memory=this.memory.filter(t=>{if("location"!=t.type||"person"!=t.data.noun.type||t.data.x<this.x-8||t.data.x>this.x+8||t.data.y<this.y-8||t.data.y>this.y+8)return!0;let e=o.find(({x:e,y:a})=>e===t.data.x&&a===t.data.y);return!(null==e||e.id===this.id)}),i))if(null!=r){if(r.item.root&&(this.common[r.id]=(this.common[r.id]??0)+1),!this.short.justDropped){let i=0;for(let o of this.objectives.slice(0,this.objectives.length-1)){if("obtain"===o.type&&!o.data.another&&B.matches(o.data.noun.data.selector,r.item)){this.completeAltObjective(i),this.memory.push(K.Location(o.data.noun,t,e,a));break}i+=1}}(r.item.tags.includes("important")||r.item.tags.includes("foodSource")||r.item.tags.includes("heatSource")||r.item.tags.includes("healing")||r.item.tags.includes("edible"))&&(this.memory=this.memory.filter(t=>!("location"===t.type&&"thing"===t.data.noun.type&&t.data.noun.data.selector.conditions.find(t=>t.type===h.Is&&t.data===r.item.id))),this.memory.push(K.Location({type:"thing",data:{selector:{conditions:[{type:h.Is,data:r.item.id}]}}},t,e,a)))}let s="health";for(let t of["health","hunger","temperature","boredom"])this.needs[t]>this.needs[s]&&(s=t);(0===this.objectives.length||"fulfillNeed"!==this.objectives[0].type||this.objectives[0].data.need!==s)&&(this.objectives=[],this.addObjective(V.FulfillNeed(s)));let n=this.objectives[0];"fulfillNeed"===n.type&&"hunger"===n.data.need&&.002>Math.random()&&(this.objectives=[n],this.short={});let c=this.objectives[this.objectives.length-1];if(this.nextAction=q.Nothing(),null!=this.short.goto){if(this.x===this.short.goto.x&&this.y===this.short.goto.y)this.short.goto=null;else if(this.short.calculated);else{let a=this.short.goto.x-this.x,i=this.short.goto.y-this.y,o=t.get(this.short.goto.x,this.short.goto.y);null!=o&&o.item.tags.includes("blocking")&&(this.short.goto=this.gotoNoBlocking(t,this.short.goto.x,this.short.goto.y)),Math.abs(a)>Math.abs(i)?a>0?this.nextAction=q.Move(4):this.nextAction=q.Move(2):i>0?this.nextAction=q.Move(3):this.nextAction=q.Move(1);let s=r[this.nextAction.data.direction];(null!=t.get(s.x,s.y)&&t.get(s.x,s.y)?.item.tags.includes("blocking")||e.some(t=>t.id!=this.id&&t.x===s.x&&t.y===s.y))&&(this.nextAction=this.moveRandomly(t,r))}}else if("fulfillNeed"===c.type){if("health"===c.data.need){if(null!=this.holding&&this.holding.item.tags.includes("healing"))this.nextAction=q.Eat();else if(null!=t.get(this.x,this.y)&&t.get(this.x,this.y).item.tags.includes("healing"))null!=this.holding?this.tryToDrop(t,r,a):this.nextAction=q.Interact(0);else{let t=O.items.filter(t=>t.tags.includes("healing"));this.addObjective(V.Obtain(U.Thing({conditions:[{type:h.Is,data:t[Math.floor(Math.random()*t.length)].id}]}),!1))}}else if("hunger"===c.data.need){if(null!=this.holding&&this.holding.item.tags.includes("edible"))this.nextAction=q.Eat();else if(null!=t.get(this.x,this.y)&&t.get(this.x,this.y).item.tags.includes("edible"))null!=this.holding?this.tryToDrop(t,r,a):this.nextAction=q.Interact(0);else{// priority when NOT SEVERE: make a food source / work towards good food
// priority when SEVERE: find food
let t=t=>{let e=t.properties.food,a=t.properties.heal||0;return(e+Math.log2(a+1))**2},e=e=>{let a=t(e),i=e.depth(),o=this.memory.some(t=>"location"===t.type&&"thing"===t.data.noun.type&&B.matches(t.data.noun.data.selector,e)),r=(Math.log2(i)*e.required(this.known))**(o?1:2)+1;return a/r*(.8+.4*Math.random())},a=O.items.filter(t=>t.tags.includes("edible"));O.items.filter(t=>t.tags.includes("foodSource"));{// find food
let i=a.filter(t=>e(t)>0),o=i.sort((t,a)=>e(a)-e(t))[0];console.table(i.map(a=>({name:a.name,score:e(a),nutrition:t(a),effort:(a.depth()*a.required(this.known))**(this.memory.some(t=>"location"===t.type&&"thing"===t.data.noun.type&&B.matches(t.data.noun.data.selector,a))?1:2)+1}))),o&&this.addObjective(V.Obtain(U.Thing({conditions:[{type:h.Is,data:o.id}]}),!1))}}}else if("temperature"===c.data.need||"boredom"===c.data.need){// fire?
let e=O.getItem(57),i=O.getItem(52),o=this.locationMemory(e);if(o){if(this.temperature<2){if(t.chunks[this.outerIndex()].items.some(t=>null!=t&&t.item.id===e.id)){// randomly move within chunk
let t=[1,2,3,4].filter(t=>{let e=r[t],a=e.x/j+e.y/j*C;return a===this.outerIndex()});this.nextAction=q.Move(t[Math.floor(Math.random()*t.length)])}else this.nextAction=this.moveRandomly(t,r),this.short.goto=this.gotoNoBlocking(t,o.data.x,o.data.y)}else this.holding&&this.holding.item.id===i.id?t.chunks[this.outerIndex()].items.some(t=>null!=t&&t.item.id===e.id)?(this.tryToDrop(t,r,a),this.short.goto=this.gotoNoBlocking(t,this.x+Math.floor(10*Math.random()-5),this.y+Math.floor(10*Math.random()-5))):(this.nextAction=this.moveRandomly(t,r),this.short.goto=this.gotoNoBlocking(t,o.data.x,o.data.y)):null!=t.get(this.x,this.y)&&t.get(this.x,this.y).id===i.id?this.nextAction=q.Interact(0):(this.addObjective(V.Obtain(U.Thing({conditions:[{type:h.Is,data:i.id}]}),!0)),this.short.goto=this.gotoNoBlocking(t,this.x+Math.floor(10*Math.random()-5),this.y+Math.floor(10*Math.random()-5)))}else this.addObjective(V.Obtain(U.Thing({conditions:[{type:h.Is,data:e.id}]}),!1))}else c.data.need}else if("obtain"===c.type){let e=O.getItem(O.query(c.data.noun.data.selector)[0]),o=this.memory.find(t=>"location"===t.type&&"thing"===t.data.noun.type&&B.matches(t.data.noun.data.selector,e));if(!c.data.another&&null!=this.holding&&B.matches(c.data.noun.data.selector,this.holding.item))this.nextAction=q.Nothing(),this.completeObjective();else if(!this.short.justDropped&&r.map(e=>t.get(e.x,e.y)).some(t=>null!=t&&t.item.id===e.id)){let i=r.findIndex(a=>null!=t.get(a.x,a.y)&&t.get(a.x,a.y).item.id===e.id);this.memory.push(K.Location(U.Thing({conditions:[{type:h.Is,data:e.id}]}),r[i].x,r[i].y,a)),this.completeObjective()}else if(c.data.another||this.short.justDropped||!o){if(e.root){// first see if in vicinity
let e=this.nearestItem(i,c.data.noun.data.selector);if(null!=e&&null!=e.item)this.short.goto=this.gotoNoBlocking(t,e.x,e.y);else if(this.whereIsItem(c.data.noun.data.selector)){let e=this.whereIsItem(c.data.noun.data.selector);this.short.goto=this.gotoNoBlocking(t,e.x,e.y)}else{this.short.searched=[...this.short.searched??[],[this.x,this.y]];let e=Math.min(Math.max(this.x+Math.round(20*Math.random()-10),0),t.size-1),a=Math.min(Math.max(this.y+Math.round(20*Math.random()-10),0),t.size-1),i=0;for(;this.short.searched.find(([t,i])=>t>e-10&&t<e+10&&i>a-10&&i<a+10)&&(e=Math.min(Math.max(this.x+Math.round(Math.random()*(20+4*i)-(10+2*i)),0),t.size-1),a=Math.min(Math.max(this.y+Math.round(Math.random()*(20+4*i)-(10+2*i)),0),t.size-1),!((i+=1)>10)););this.short.goto=this.gotoNoBlocking(t,e,a)}}else{let o=e.resultedBy,s=o.find(t=>t.simpleUsed().map(t=>O.getItem(t)).every(t=>null!=this.holding&&this.holding.id===t.id||this.memory.find(e=>"location"===e.type&&"thing"===e.data.noun.type&&B.matches(e.data.noun.data.selector,t))));if(s){let e=s.actor,i=s.origin,o=!!e&&null!=this.holding&&B.matches(e,this.holding.item)||!e&&!this.holding,n=r.findIndex(e=>null!=t.get(e.x,e.y)&&B.matches(i,t.get(e.x,e.y).item));if(o){if(-1===n){if(!this.holding||e&&B.matches(e,this.holding.item)){let e=O.getItem(s.getAnOrigin()),a=this.memory.find(t=>"location"===t.type&&"thing"===t.data.noun.type&&B.matches(t.data.noun.data.selector,e));a?this.short.goto=this.gotoNoBlocking(t,a.data.x,a.data.y):(this.addObjective(V.Obtain(U.Thing({conditions:[{type:h.Is,data:e.id}]}),!0),c),this.nextAction=q.Nothing())}else this.tryToDrop(t,r,a)}else this.nextAction=q.Interact(n)}else if(!this.holding||e&&B.matches(e,this.holding.item)){if(r.some(a=>null!=t.get(a.x,a.y)&&B.matches(e,t.get(a.x,a.y).item)))this.nextAction=q.Interact(r.findIndex(a=>null!=t.get(a.x,a.y)&&t.get(a.x,a.y).item.id===e.conditions[0].data));else{let e=O.getItem(s.getAnActor()),a=this.memory.find(t=>"location"===t.type&&"thing"===t.data.noun.type&&B.matches(t.data.noun.data.selector,e));a?this.short.goto=this.gotoNoBlocking(t,a.data.x,a.data.y):(this.addObjective(V.Obtain(U.Thing({conditions:[{type:h.Is,data:e.id}]}),!0),c),this.nextAction=q.Nothing())}}else this.tryToDrop(t,r,a)}else{let t=t=>{if(this.objectives.some(e=>"obtain"===e.type&&B.matches(e.data.noun.data.selector,t)&&!e.data.another))return 1/0;let e=(t.depth()||0)**2+1,a=this.memory.find(e=>"location"===e.type&&"thing"===e.data.noun.type&&B.matches(e.data.noun.data.selector,t))||i.find(({item:e})=>null!=e&&e.item.id===t.id),o=t.resources().reduce((t,e)=>t+(this.common[e.id]??0),0);return(a?Math.sqrt(e)/2:e)/Math.log(o+Math.E)*(.8+.4*Math.random())},e=e=>e.actor&&e.results.some(t=>t.actor&&"SameItem"===t.actor.type)?1/0:t(O.getItem(e.getAnOrigin()))*(e.actor?t(O.getItem(e.getAnActor())):1)*(e.time||1),a=o.sort((t,a)=>e(t)-e(a))[0],r=a.simpleUsed().map(t=>O.getItem(t)),s=new Set;for(let t of r.sort((t,e)=>t.active||e.active?t.active===e.active?0:t.active?-1:1:t.depth()-e.depth()))s.has(t.id)&&(this.objectives[this.objectives.length-1].data.another=!0),this.addObjective(V.Obtain(U.Thing({conditions:[{type:h.Is,data:t.id}]}),!1),c),s.add(t.id);this.nextAction=q.Nothing()}}}else this.short.goto=this.gotoNoBlocking(t,o.data.x,o.data.y)}"nothing"===this.nextAction.type&&.5>Math.random()&&(this.nextAction=this.moveRandomly(t,r))}gotoNoBlocking(t,e,a){if(console.log("GOTO NOT BLOCKING:",e,a,t.get(e,a),t.get(e,a)&&t.get(e,a).item.tags.includes("blocking")),!(null!=t.get(e,a)&&t.get(e,a).item.tags.includes("blocking")))return{x:e,y:a};for(let[i,o]of[[e,a+1],[e,a-1],[e+1,a],[e-1,a]])if(null==t.get(i,o)||!t.get(i,o).item.tags.includes("blocking"))return{x:i,y:o};return{x:e,y:a}}moveRandomly(t,e){let a=[1,2,3,4].filter(a=>{let i=e[a];return null==t.get(i.x,i.y)||!t.get(i.x,i.y).item.tags.includes("blocking")});return a.length>0?q.Move(a[Math.floor(Math.random()*a.length)]):q.Move(1+Math.floor(4*Math.random()))}addItemToMemory(t,e,a,i){null!=t.get(e,a)&&this.memory.push(K.Location(U.Thing({conditions:[{type:h.Is,data:t.get(e,a).item.id}]}),e,a,i))}tryToDrop(t,e,a){this.short.justDropped=!0;for(let i=0;i<e.length;i+=1)if(null==t.get(e[i].x,e[i].y))return this.nextAction=q.Interact(i),this.memory.push(K.Location(U.Thing({conditions:[{type:h.Is,data:this.holding.item.id}]}),e[i].x,e[i].y,a)),!0;return this.nextAction=this.moveRandomly(t,e),!1}nearestItem(t,e){let a=t.filter(({item:t})=>null!=t&&B.matches(e,t.item));return 0===a.length?null:a.sort((t,e)=>{let a=(t.x-this.x)**2+(t.y-this.y)**2,i=(e.x-this.x)**2+(e.y-this.y)**2;return a-i})[0]}nearestItemWithoutNearbyPerson(t,e,a){let i=t.filter(({item:t})=>null!=t&&B.matches(e,t.item));if(0===i.length)return null;let o=i.map(({x:t,y:e})=>a.reduce((a,i)=>Math.min(a,(i.x-t)**2+(i.y-e)**2),1/0));return i.sort((t,e)=>{let a=((t.x-this.x)**2+(t.y-this.y)**2)/(o[i.indexOf(t)]+1),r=((e.x-this.x)**2+(e.y-this.y)**2)/(o[i.indexOf(e)]+1);return a-r})[0]}completeAltObjective(t){let e=new Set,a=[t],i=this.objectives.map(t=>"obtain"===t.type?t.data.noun:null);for(this.short.goto=null,this.short.path=null;a.length>0;){let t=a.pop();e.add(t),"obtain"===this.objectives[t].type&&this.objectives[t].data.children.forEach(t=>{e.has(t)||a.push(t)})}this.objectives=this.objectives.filter((t,a)=>!e.has(a)),this.objectives.forEach(t=>{"obtain"===t.type&&(t.data.children=t.data.children.filter(t=>!e.has(t)).map(t=>this.objectives.findIndex(e=>e.data.noun===i[t])))})}/*
    computePath(world: World, x: number, y: number, obstacles: {x: number, y: number}[] = []): { [key: number]: Direction } | null {
        // A* pathfinding, cannot move through items tagged 'blocking'
        // returns a map of which index we're at and which direction to move from there.

        const heuristic = (index: number) => {
            const dx = index % WORLD_SIZE - x;
            const dy = Math.floor(index / WORLD_SIZE) - y;
            return Math.sqrt(dx ** 2 + dy ** 2);
        }

        const obstaclesSet = new Set(obstacles.map(({ x, y }) => y * WORLD_SIZE + x));

        const start = this.index();
        const end = Math.min(Math.max(y, 0), WORLD_SIZE - 1) * WORLD_SIZE + Math.min(Math.max(x, 0), WORLD_SIZE - 1);

        if (start === end) {
            return {};
        }
        if (obstaclesSet.has(end)) {
            return null;
        }

        const open: number[] = [start];
        const closed = new Set<number>();

        const cost: { [key: number]: number } = {};
        const parent: { [key: number]: number | null } = {};

        cost[start] = 0;
        parent[start] = null;

        let i = 0;
        while (open.length > 0) {
            const current = open.reduce((a, b) => cost[a] ?? 0 + heuristic(a) < cost[b] ?? 0 + heuristic(b) ? a : b, open[0]);
            if (current === end) {
                break;
            }
            
            open.splice(open.indexOf(current), 1);
            closed.add(current);

            const neighbors = [
                current - WORLD_SIZE,
                current - 1,
                current + 1,
                current + WORLD_SIZE,
            ];

            for (const neighbor of neighbors) {
                const nx = neighbor % WORLD_SIZE;
                const ny = Math.floor(neighbor / WORLD_SIZE);
                if (nx < 0 || ny < 0 || nx >= WORLD_SIZE || ny >= WORLD_SIZE) {
                    continue;
                }
                if (closed.has(neighbor)) {
                    continue;
                }
                if (obstaclesSet.has(neighbor)) {
                    continue;
                }
                if (world[neighbor] != null && world[neighbor]!.item.tags.includes('blocking')) {
                    continue;
                }
                const newCost = cost[current] + 1;
                if (!open.includes(neighbor)) {
                    open.push(neighbor);
                } else if (newCost >= cost[neighbor]) {
                    continue;
                }
                cost[neighbor] = newCost;
                parent[neighbor] = current;
            }

            i += 1;
            if (i > 10000) {
                console.log('search exceeded 10000 node limit');
                break;
            }
        }

        if (open.length === 0) {
            console.log('ran out of nodes?', i);
        }
        
        if (parent[end] == null) {
            console.log('no path found', this.x, this.y, x, y);
            return null;
        }

        const path: { [key: number]: Direction } = {};
        let current = end;
        while (current !== start) {
            const next = parent[current]!;
            if (next === current - WORLD_SIZE) {
                path[next] = Direction.Down;
            } else if (next === current - 1) {
                path[next] = Direction.Right;
            } else if (next === current + 1) {
                path[next] = Direction.Left;
            } else if (next === current + WORLD_SIZE) {
                path[next] = Direction.Up;
            }
            current = next;
        }
        return path;
    } */locationMemory(t){return this.memory.find(e=>"location"===e.type&&"thing"===e.data.noun.type&&B.matches(e.data.noun.data.selector,t))}whereIsItem(t){let e=this.memory.find(e=>"location"===e.type&&"thing"===e.data.noun.type&&B.matches(t,O.getItem(O.query(e.data.noun.data.selector)[0]||0)));return null==e?null:e.data}completeObjective(){let t=this.objectives.length-1;this.objectives.forEach(e=>{"obtain"===e.type&&(e.data.children=e.data.children.filter(e=>e!==t))}),this.objectives.pop(),this.short={}}addObjective(t,e){null!=e&&"obtain"===e.type&&"obtain"===t.type&&e.data.children.push(this.objectives.length),this.objectives.push(t),this.short={}}act(){return null!=this.nextAction?this.nextAction:q.Nothing()}outerIndex(){return Math.floor(this.y/j)*C+Math.floor(this.x/j)}innerIndex(){return this.y%j*j+this.x%j}}function J(t,e){let a=E(),i=Math.round(4*Math.random()+2),o=Math.round(Math.random()*e.size),r=Math.round(Math.random()*e.size),s=[],n=[];for(let c=0;c<i;c+=1){let i=E(),c=o,d=r;for(;n.find(([t,e])=>t===c&&e===d)||null!=e.get(c,d);)c=Math.min(Math.max(o+Math.round(20*Math.random()-10),0),e.size-1),d=Math.min(Math.max(r+Math.round(20*Math.random()-10),0),e.size-1);n.push([c,d]),s.push(new _(P(),i,a,t,c,d))}for(let e of s)for(let a of s)e!==a&&(e.reputations[a.id]=100,e.memory.push(K.Exists(U.Person(a.id),t)),e.health=80+20*Math.random(),e.home={x:o,y:r});return s}function G(t){for(let e of t)for(let a of t)e!==a&&(void 0===e.reputations[a.id]&&(e.reputations[a.id]=0),e.female()!=a.female()&&(e.reputations[a.id]+=50),e.reputations[a.id]+=Math.round(20*Math.random()-10))}for(const t in N)N.hasOwnProperty(t)&&(window[t]=N[t]);for(const t in A)A.hasOwnProperty(t)&&(window[t]=A[t]);//# sourceMappingURL=index.b8f9d50a.js.map

//# sourceMappingURL=index.b8f9d50a.js.map
